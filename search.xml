<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown教程</title>
      <link href="/2022/05/09/Markdown%E6%95%99%E7%A8%8B/"/>
      <url>/2022/05/09/Markdown%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="本教程只限于Windows系统"><a href="#本教程只限于Windows系统" class="headerlink" title="本教程只限于Windows系统"></a>本教程只限于Windows系统</h2><p>这篇博客是用vscode的情况下写的</p><h2 id="1-编辑器的选择"><a href="#1-编辑器的选择" class="headerlink" title="1.编辑器的选择"></a>1.编辑器的选择</h2><p>Typora – 这个编辑器就是适用于Markdown这个语言的，不过现在收费了（89元）。<br>但是任然可以选择在官往下载历史版本（免费使用）.<br><a href="https://typoraio.cn/">Typora官网</a><br>VsCode – 目前免费的编辑器，很好用，支持各种插件，功能强大，还有大牛最喜欢的黑色主题.（用来写Markword的时候VsCode和Typora比显然是Typora好用）<br><a href="https://visualstudio.microsoft.com/zh-hans/">Visual Studio官网</a></p><hr><h2 id="2-标题"><a href="#2-标题" class="headerlink" title="2.标题"></a>2.标题</h2><p>标题的操作符是 “#”<br>操作符和内容之间需要一个空格</p><h3 id="标题等级"><a href="#标题等级" class="headerlink" title="标题等级"></a>标题等级</h3><p>标题一共分6个等级.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 我是一级标题</span><br><span class="line">## 我是二级标题   </span><br><span class="line">### 我是三级标题</span><br><span class="line">#### 我是四级标题</span><br><span class="line">##### 我是五级标题</span><br><span class="line">###### 我是六级标题</span><br></pre></td></tr></table></figure><h3 id="标题的使用"><a href="#标题的使用" class="headerlink" title="标题的使用"></a>标题的使用</h3><p>在我学习的时候，我发现很多教程里面对于标题使用方法的解释都有误导，或者说解析的根本不全，导致很多小白错误的认识和理解标题.<br>最常见的就是把标题代码一列，然后下面放一个效果展示，（可以去看我刚开始写的markdown教程，我就是被误导了）<br>我刚开始以为标题就是调整字体的大小.<br>实际上，标题就像是书的目录一样，有一个大的分类，然后里面有小的分类.（解释不太好说明）看图片<br><img src="/2022/05/09/Markdown%E6%95%99%E7%A8%8B/2022-05-09-19-24-32.png"><br><img src="/2022/05/09/Markdown%E6%95%99%E7%A8%8B/2022-05-09-19-16-05.png"><br>我对正文部分进行了缩放，可以对着上面两张图自己解析一下标题的用法<br>标题的等级决定了哪个标题在哪个标题的里面<br>只要设置同等级的标题，标题和标题就会被分开<br>可以在低等级的标题外面设置更大标题把低等级的包起来（最大是一级标题）<br>也可以在高等级的标题里设置更小的标题（最小的是六级标题）<br>注意：标题并不适合用来调整正文里面文字的大小.有的人发现加上标题字体会变化后，会把标题当做用来放大字体的工具.（如果你这么做了，那你博客里面的目录，或者大纲会变得很灿烂，详情参考我之前写的markdown教程）.<br>关于在使用标题时候遇到的一些稀奇古怪的问题，可以去我的疑难解答里找找.<br>至少我会把我学习时候遇到的问题记录下来.</p><hr><h2 id="3-段落（正文）"><a href="#3-段落（正文）" class="headerlink" title="3.段落（正文）"></a>3.段落（正文）</h2><p>文本分段，前后至少保留一个空行即可</p><p>这里提一句，在编译器中写代码并且预览的时候可能会遇到这个问题，（或者在预览的时候没有，在博客里有）.<br>什么问题呢？<br>具体表现为一个标题正文最后的内容，被当成了一个新的标题，字体被放大了.具体表现为下图:<br><img src="/2022/05/09/Markdown%E6%95%99%E7%A8%8B/2022-05-09-21-33-12.png"><br><img src="/2022/05/09/Markdown%E6%95%99%E7%A8%8B/2022-05-09-21-32-29.png"><br>可以看到我在段落的最后想加上分隔符，但是最后结果是分隔符没有，段落里的正文部分乱了<br>怎么解决？<br>就是没分段，在一个标题正文的结尾分行就好了.<br><img src="/2022/05/09/Markdown%E6%95%99%E7%A8%8B/2022-05-09-21-37-49.png"></p><hr><h2 id="4-字体（文本）"><a href="#4-字体（文本）" class="headerlink" title="4.字体（文本）"></a>4.字体（文本）</h2><p>操作符和内容之间不能有空格</p><p><code>**加粗**</code><br><strong>加粗</strong></p><p><code>*斜体*</code><br><code>_斜体_</code><br><em>斜体</em></p><p><code>***粗斜体***</code><br><code>___粗斜体___</code><br><em><strong>粗斜体</strong></em></p><p><code>~~删除线~~</code><br><del>删除线</del></p><p><code>&lt;u&gt;下划线&lt;/u&gt;</code><br><u>下划线</u></p><hr><h2 id="5-引用"><a href="#5-引用" class="headerlink" title="5.引用"></a>5.引用</h2><p>引用操作符和内容之间加不加空格都可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; 我是引用</span><br><span class="line">&gt; 我是引用</span><br><span class="line">&gt;&gt; 我是引用</span><br><span class="line">&gt;&gt;&gt; 我是引用</span><br><span class="line">&gt;&gt;&gt;&gt; 我是引用</span><br><span class="line">&gt;&gt;&gt;&gt;&gt; 我是引用</span><br></pre></td></tr></table></figure><blockquote><p>我是引用<br>测试1<br>我是引用</p><blockquote><p>我是引用<br>测试2</p><blockquote><p>我是引用<br>测试3</p><blockquote><p>  我是引用<br>测试4</p><blockquote><blockquote><p>我是引用<br>引用操作符没有数量限制</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><hr><h2 id="6-分割线"><a href="#6-分割线" class="headerlink" title="6.分割线"></a>6.分割线</h2><p>分割线操作符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//分割线1</span><br><span class="line">---</span><br><span class="line">//分割线2</span><br><span class="line">***</span><br></pre></td></tr></table></figure><p>两种写法只是写法不同，实际使用效果都一样.</p><hr><h2 id="7-代码"><a href="#7-代码" class="headerlink" title="7.代码"></a>7.代码</h2><p>代码操作符是ESC下面的那个点.</p><h3 id="代码片段"><a href="#代码片段" class="headerlink" title="代码片段"></a>代码片段</h3><p>用”&#96;”把代码包起来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入 `printf()`</span><br></pre></td></tr></table></figure><p>效果 <code>printf()</code></p><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>在typora上，输入&#96;&#96;&#96;回车，可以在右下角选择自己代码的语言.</p><p>也可以在&#96;&#96;&#96;后面输入自己代码的语言在回车</p><p>在vscode上,无法直接选择语言，只能在&#96;&#96;&#96;后面输入自己代码的语言</p><hr><h2 id="8-图片插入"><a href="#8-图片插入" class="headerlink" title="8.图片插入"></a>8.图片插入</h2><hr><h2 id="9-超链接"><a href="#9-超链接" class="headerlink" title="9.超链接"></a>9.超链接</h2><p>超链接语法:<br>一个中括号，加上一个小括号.<br>中括号里的内容自定义，小括号里的是链接.<br>例：<br><img src="/2022/05/09/Markdown%E6%95%99%E7%A8%8B/2022-05-09-17-43-07.png"><br>效果如下：<br><a href="https://github.com/AKYCCCC/AKYCCCC.github.io">我的Github</a></p><hr><h2 id="10-列表"><a href="#10-列表" class="headerlink" title="10.列表"></a>10.列表</h2><p>列表操作符 “-“ ，”+” , “*” 三个都可以，不管写哪个操作符效果都一样<br>就算你在列表嵌套的时候3个操作符随便写，最后效果也是一样的，看下面例子</p><ul><li>一级列表<ul><li>二级列表<ul><li>三级列表</li></ul></li></ul></li></ul><p><img src="/2022/05/09/Markdown%E6%95%99%E7%A8%8B/2022-05-09-20-12-20.png"><br>列表开头的那个图案，一级列表是实心圆，二级列表是空心圆，三级列表是实心方块。实心方块在往后就都是实心方块了.</p><p>操作符后面需要一个空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 列表 </span><br><span class="line">* 列表</span><br><span class="line">+ 列表</span><br></pre></td></tr></table></figure><p>效果展示：</p><ul><li>列表</li></ul><ul><li>列表</li></ul><ul><li>列表</li></ul><h3 id="有序列表和无序列表"><a href="#有序列表和无序列表" class="headerlink" title="有序列表和无序列表"></a>有序列表和无序列表</h3><p>列表还分为有序列表和无序列表.<br>什么是无序列表？我的理解就是：只要使用上面三个操作符直接写的列表就是无序列表，不管是否嵌套（我不确定）</p><p>什么是有序列表？我的理解就是：一个数字后面加个”.”,这样的叫有序列表.<br>在”.”的后面也需要一个空格</p><ol><li>列表</li><li>列表<ol><li>子列表</li><li>子列表</li><li>子列表<ol><li>子列表</li></ol></li></ol></li><li>列表<ol><li>子列表<br>有序列表的序号只要给第一个，后面的序号会自动在前面的基础上加1<br>在有序列表中创建子列表的时候，第一个子列表的序号默认是1，不过都是可以自己改的.</li></ol></li></ol><p>关于开头的数字，只需要起个头，接下来按回车会自动续写.不一定是1.就算你写114514.，按回车后下一个自动生成114515.序号是可以随意改动的.</p><h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><p>就是在一个列表里创建子列表<br>操作方法：在上一个列表的下面空四格，再创建一个列表就是列表嵌套.</p><hr><h2 id="11-markdown符号或图标"><a href="#11-markdown符号或图标" class="headerlink" title="11.markdown符号或图标"></a>11.markdown符号或图标</h2><p><a href="https://www.baidu.com/s?ie=utf-8&f=8&rsv_bp=1&rsv_idx=1&tn=baidu&wd=markdown%E7%AC%A6%E5%8F%B7%E6%88%96%E5%9B%BE%E6%A0%87%E5%A4%A7%E5%85%A8&fenlei=256&oq=markdown%25E7%25AC%25A6%25E5%258F%25B7%25E6%2588%2596%25E5%259B%25BE%25E6%25A0%2587%25E5%25A4%25A7%25E5%2585%25A8&rsv_pq=9a946b880002757e&rsv_t=082bTw5wpwusc1QwPIJHq58mlNWUOJwZqKiIbUIJOBMbsHaa7V7sEhYW23o&rqlang=cn&rsv_enter=0&rsv_btype=t&rsv_dl=tb&rsv_sug3=2&rsv_sug1=3&rsv_sug7=100&rsv_sug4=4713&rsv_sug=1">markdown符号或图标大全</a></p><h3 id="插入表情符号"><a href="#插入表情符号" class="headerlink" title="插入表情符号"></a>插入表情符号</h3><p>一个冒号（英文输入法）+对应表情的英文<br><a href="https://www.webfx.com/tools/emoji-cheat-sheet/">对应表情的英文</a></p><h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><p>和很多语言一样，有些符号有自己的作用，想被直接写出来是不行的.<br>只要在想要输出的符号前面加上\就可以直接输出符号<br>如果想出\就直接写\\就可以了</p><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><hr><h2 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h2><p><a href="https://www.bilibili.com/video/BV1hJ411X75X">https://www.bilibili.com/video/BV1hJ411X75X</a><br><a href="https://www.bilibili.com/video/BV1da411v7o9?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1da411v7o9?spm_id_from=333.337.search-card.all.click</a></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c语言进阶</title>
      <link href="/2022/04/30/c%E8%AF%AD%E8%A8%80%E8%BF%9B%E9%98%B6/"/>
      <url>/2022/04/30/c%E8%AF%AD%E8%A8%80%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> C语言学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识c语言练习作业</title>
      <link href="/2022/04/30/%E5%88%9D%E8%AF%86c%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A0%E4%BD%9C%E4%B8%9A/"/>
      <url>/2022/04/30/%E5%88%9D%E8%AF%86c%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A0%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="x2F-x2F-作业1：动态组名"><a href="#x2F-x2F-作业1：动态组名" class="headerlink" title="&#x2F;&#x2F;作业1：动态组名"></a>&#x2F;&#x2F;作业1：动态组名</h1><h1 id="x2F-x2F-作业2：模拟用户情景，输入密码，输入错误3次则退出程序"><a href="#x2F-x2F-作业2：模拟用户情景，输入密码，输入错误3次则退出程序" class="headerlink" title="&#x2F;&#x2F;作业2：模拟用户情景，输入密码，输入错误3次则退出程序"></a>&#x2F;&#x2F;作业2：模拟用户情景，输入密码，输入错误3次则退出程序</h1><h1 id="x2F-x2F-作业3：写一个输入密码，并且确认密码"><a href="#x2F-x2F-作业3：写一个输入密码，并且确认密码" class="headerlink" title="&#x2F;&#x2F;作业3：写一个输入密码，并且确认密码"></a>&#x2F;&#x2F;作业3：写一个输入密码，并且确认密码</h1><h1 id="x2F-x2F-作业4：计算n的阶乘"><a href="#x2F-x2F-作业4：计算n的阶乘" class="headerlink" title="&#x2F;&#x2F;作业4：计算n的阶乘"></a>&#x2F;&#x2F;作业4：计算n的阶乘</h1><h1 id="x2F-x2F-作业5：计算n的阶乘相加"><a href="#x2F-x2F-作业5：计算n的阶乘相加" class="headerlink" title="&#x2F;&#x2F;作业5：计算n的阶乘相加"></a>&#x2F;&#x2F;作业5：计算n的阶乘相加</h1><h1 id="x2F-x2F-作业6：在1-10中查找一个数-（有序数组）"><a href="#x2F-x2F-作业6：在1-10中查找一个数-（有序数组）" class="headerlink" title="&#x2F;&#x2F;作业6：在1-10中查找一个数.（有序数组）"></a>&#x2F;&#x2F;作业6：在1-10中查找一个数.（有序数组）</h1><h1 id="x2F-x2F-作业7：猜数字游戏-（一般般）"><a href="#x2F-x2F-作业7：猜数字游戏-（一般般）" class="headerlink" title="&#x2F;&#x2F;作业7：猜数字游戏 （一般般）"></a>&#x2F;&#x2F;作业7：猜数字游戏 （一般般）</h1><h1 id="x2F-x2F-作业8：输入3个数a-b-c-让三个数从大到小排列"><a href="#x2F-x2F-作业8：输入3个数a-b-c-让三个数从大到小排列" class="headerlink" title="&#x2F;&#x2F;作业8：输入3个数a,b,c, 让三个数从大到小排列"></a>&#x2F;&#x2F;作业8：输入3个数a,b,c, 让三个数从大到小排列</h1><h1 id="x2F-x2F-作业9：打印1-100中3的倍数（优化）"><a href="#x2F-x2F-作业9：打印1-100中3的倍数（优化）" class="headerlink" title="&#x2F;&#x2F;作业9：打印1-100中3的倍数（优化）"></a>&#x2F;&#x2F;作业9：打印1-100中3的倍数（优化）</h1><h1 id="x2F-x2F-作业10：给2个数，求最大公约数（优化）"><a href="#x2F-x2F-作业10：给2个数，求最大公约数（优化）" class="headerlink" title="&#x2F;&#x2F;作业10：给2个数，求最大公约数（优化）"></a>&#x2F;&#x2F;作业10：给2个数，求最大公约数（优化）</h1><h1 id="x2F-x2F-作业11：打印1000-2000之间的闰年（优化）"><a href="#x2F-x2F-作业11：打印1000-2000之间的闰年（优化）" class="headerlink" title="&#x2F;&#x2F;作业11：打印1000-2000之间的闰年（优化）"></a>&#x2F;&#x2F;作业11：打印1000-2000之间的闰年（优化）</h1><h1 id="x2F-x2F-作业12：队友100-200之间的素数（优化）"><a href="#x2F-x2F-作业12：队友100-200之间的素数（优化）" class="headerlink" title="&#x2F;&#x2F;作业12：队友100-200之间的素数（优化）"></a>&#x2F;&#x2F;作业12：队友100-200之间的素数（优化）</h1><h1 id="x2F-x2F-作业13：打印100-200之间素数（函数）"><a href="#x2F-x2F-作业13：打印100-200之间素数（函数）" class="headerlink" title="&#x2F;&#x2F;作业13：打印100-200之间素数（函数）"></a>&#x2F;&#x2F;作业13：打印100-200之间素数（函数）</h1><h1 id="x2F-x2F-作业14：打印1000-2000之间的闰年（函数）"><a href="#x2F-x2F-作业14：打印1000-2000之间的闰年（函数）" class="headerlink" title="&#x2F;&#x2F;作业14：打印1000-2000之间的闰年（函数）"></a>&#x2F;&#x2F;作业14：打印1000-2000之间的闰年（函数）</h1><h1 id="x2F-x2F-作业15：在1-10之间查找一个数（函数）（有序数组）"><a href="#x2F-x2F-作业15：在1-10之间查找一个数（函数）（有序数组）" class="headerlink" title="&#x2F;&#x2F;作业15：在1-10之间查找一个数（函数）（有序数组）"></a>&#x2F;&#x2F;作业15：在1-10之间查找一个数（函数）（有序数组）</h1><h1 id="x2F-x2F-作业16：写一个函数，每调用一次函数，num就加1（函数）"><a href="#x2F-x2F-作业16：写一个函数，每调用一次函数，num就加1（函数）" class="headerlink" title="&#x2F;&#x2F;作业16：写一个函数，每调用一次函数，num就加1（函数）"></a>&#x2F;&#x2F;作业16：写一个函数，每调用一次函数，num就加1（函数）</h1><h1 id="x2F-x2F-作业17：接受一个整形值（无符号），按照顺序打印他的每一位-例如：输入：1234，打印1-2-3-4-（递归）"><a href="#x2F-x2F-作业17：接受一个整形值（无符号），按照顺序打印他的每一位-例如：输入：1234，打印1-2-3-4-（递归）" class="headerlink" title="&#x2F;&#x2F;作业17：接受一个整形值（无符号），按照顺序打印他的每一位.例如：输入：1234，打印1 2 3 4.（递归）"></a>&#x2F;&#x2F;作业17：接受一个整形值（无符号），按照顺序打印他的每一位.例如：输入：1234，打印1 2 3 4.（递归）</h1><h1 id="x2F-x2F-作业18：编写函数不允许创建临时变量，求字符串长度-（递归）"><a href="#x2F-x2F-作业18：编写函数不允许创建临时变量，求字符串长度-（递归）" class="headerlink" title="&#x2F;&#x2F;作业18：编写函数不允许创建临时变量，求字符串长度.（递归）"></a>&#x2F;&#x2F;作业18：编写函数不允许创建临时变量，求字符串长度.（递归）</h1><h1 id="x2F-x2F-作业19：求n的阶乘（递归）"><a href="#x2F-x2F-作业19：求n的阶乘（递归）" class="headerlink" title="&#x2F;&#x2F;作业19：求n的阶乘（递归）"></a>&#x2F;&#x2F;作业19：求n的阶乘（递归）</h1><h1 id="x2F-x2F-作业20：求第n个斐波那契数（不考虑溢出）（递归）（不同方法）"><a href="#x2F-x2F-作业20：求第n个斐波那契数（不考虑溢出）（递归）（不同方法）" class="headerlink" title="&#x2F;&#x2F;作业20：求第n个斐波那契数（不考虑溢出）（递归）（不同方法）"></a>&#x2F;&#x2F;作业20：求第n个斐波那契数（不考虑溢出）（递归）（不同方法）</h1><h1 id="x2F-x2F-作业21：编写程序数一下1-100的所有整数中出现多少个9"><a href="#x2F-x2F-作业21：编写程序数一下1-100的所有整数中出现多少个9" class="headerlink" title="&#x2F;&#x2F;作业21：编写程序数一下1-100的所有整数中出现多少个9"></a>&#x2F;&#x2F;作业21：编写程序数一下1-100的所有整数中出现多少个9</h1><h1 id="x2F-x2F-作业22：计算1-x2F-1-1-x2F-2-1-x2F-3-1-x2F-4………-1-x2F-99-1-x2F-100-的值"><a href="#x2F-x2F-作业22：计算1-x2F-1-1-x2F-2-1-x2F-3-1-x2F-4………-1-x2F-99-1-x2F-100-的值" class="headerlink" title="&#x2F;&#x2F;作业22：计算1&#x2F;1-1&#x2F;2+1&#x2F;3-1&#x2F;4………+1&#x2F;99-1&#x2F;100.的值"></a>&#x2F;&#x2F;作业22：计算1&#x2F;1-1&#x2F;2+1&#x2F;3-1&#x2F;4………+1&#x2F;99-1&#x2F;100.的值</h1><h1 id="x2F-x2F-作业23：求10个数中的最大值"><a href="#x2F-x2F-作业23：求10个数中的最大值" class="headerlink" title="&#x2F;&#x2F;作业23：求10个数中的最大值"></a>&#x2F;&#x2F;作业23：求10个数中的最大值</h1><h1 id="x2F-x2F-作业24：打印乘法口诀表"><a href="#x2F-x2F-作业24：打印乘法口诀表" class="headerlink" title="&#x2F;&#x2F;作业24：打印乘法口诀表"></a>&#x2F;&#x2F;作业24：打印乘法口诀表</h1><h1 id="x2F-x2F-作业拓展25：汉诺塔"><a href="#x2F-x2F-作业拓展25：汉诺塔" class="headerlink" title="&#x2F;&#x2F;作业拓展25：汉诺塔"></a>&#x2F;&#x2F;作业拓展25：汉诺塔</h1><h1 id="x2F-x2F-作业拓展26：跳台阶"><a href="#x2F-x2F-作业拓展26：跳台阶" class="headerlink" title="&#x2F;&#x2F;作业拓展26：跳台阶"></a>&#x2F;&#x2F;作业拓展26：跳台阶</h1><h1 id="x2F-x2F-作业27：字符串逆序-reverse-string-，不允许用库函数（可以自己创建一个和库函数功能相同的函数）（递归）（普通方法（指针））"><a href="#x2F-x2F-作业27：字符串逆序-reverse-string-，不允许用库函数（可以自己创建一个和库函数功能相同的函数）（递归）（普通方法（指针））" class="headerlink" title="&#x2F;&#x2F;作业27：字符串逆序(reverse_string())，不允许用库函数（可以自己创建一个和库函数功能相同的函数）（递归）（普通方法（指针））"></a>&#x2F;&#x2F;作业27：字符串逆序(reverse_string())，不允许用库函数（可以自己创建一个和库函数功能相同的函数）（递归）（普通方法（指针））</h1><h1 id="x2F-x2F-作业28；写一个递归函数Digitsum-n-输入一个非负整数，返回组成他的数字之和"><a href="#x2F-x2F-作业28；写一个递归函数Digitsum-n-输入一个非负整数，返回组成他的数字之和" class="headerlink" title="&#x2F;&#x2F;作业28；写一个递归函数Digitsum(n),输入一个非负整数，返回组成他的数字之和."></a>&#x2F;&#x2F;作业28；写一个递归函数Digitsum(n),输入一个非负整数，返回组成他的数字之和.</h1><h1 id="x2F-x2F-作业29：编写一个函数计算n的k次方-（递归）"><a href="#x2F-x2F-作业29：编写一个函数计算n的k次方-（递归）" class="headerlink" title="&#x2F;&#x2F;作业29：编写一个函数计算n的k次方.（递归）"></a>&#x2F;&#x2F;作业29：编写一个函数计算n的k次方.（递归）</h1><h1 id="x2F-x2F-作业30：冒泡排序-bubble-sort"><a href="#x2F-x2F-作业30：冒泡排序-bubble-sort" class="headerlink" title="&#x2F;&#x2F;作业30：冒泡排序 bubble_sort()"></a>&#x2F;&#x2F;作业30：冒泡排序 bubble_sort()</h1><h1 id="x2F-x2F-三字棋31（高级）"><a href="#x2F-x2F-三字棋31（高级）" class="headerlink" title="&#x2F;&#x2F;三字棋31（高级）"></a>&#x2F;&#x2F;三字棋31（高级）</h1><h1 id="x2F-x2F-扫雷32（高级）"><a href="#x2F-x2F-扫雷32（高级）" class="headerlink" title="&#x2F;&#x2F;扫雷32（高级）"></a>&#x2F;&#x2F;扫雷32（高级）</h1><h1 id="x2F-x2F-作业33：求一个整数存储在内存中的二进制中的1的个数"><a href="#x2F-x2F-作业33：求一个整数存储在内存中的二进制中的1的个数" class="headerlink" title="&#x2F;&#x2F;作业33：求一个整数存储在内存中的二进制中的1的个数"></a>&#x2F;&#x2F;作业33：求一个整数存储在内存中的二进制中的1的个数</h1><h1 id="x2F-x2F-小练习34"><a href="#x2F-x2F-小练习34" class="headerlink" title="&#x2F;&#x2F;小练习34"></a>&#x2F;&#x2F;小练习34</h1><p>&#x2F;&#x2F;int i &#x3D; 0, a &#x3D; 0, b &#x3D; 2, c &#x3D; 3, d &#x3D; 4;               &amp;&amp;思路：先从a++开始算，a&#x3D;0且后面用的&amp;&amp;，那么，0 &amp;&amp; ++b &amp;&amp; d++,在&amp;&amp;中只要有一个0那么后面的就都不用去算了.b，d不变<br>&#x2F;&#x2F;i &#x3D; a++ &amp;&amp; ++b &amp;&amp; d++;                                      但是a++用过了，所以加上1，那么a&#x3D;1，所以最后结果是 1 2 3 4   &amp;&amp;遇到假就直接停下来不继续算下去<br>&#x2F;&#x2F;&#x2F;&#x2F; i &#x3D; a++ || ++b || d++;                             ||思路，遇到真就直接停下来不继续算下去<br>&#x2F;&#x2F;printf(“ a &#x3D; %d\n b &#x3D; %d\n c &#x3D; %d\n d &#x3D; %d\n”, a, b, c, d);</p><h1 id="x2F-x2F-作业35：1-实现函数init（）初始化数组为0"><a href="#x2F-x2F-作业35：1-实现函数init（）初始化数组为0" class="headerlink" title="&#x2F;&#x2F;作业35：1.实现函数init（）初始化数组为0"></a>&#x2F;&#x2F;作业35：1.实现函数init（）初始化数组为0</h1><p>2.实现print（）打印数组的每个元素<br>3.实现对reverse（）函数完成数组元素的逆置</p><h1 id="x2F-x2F-作业36：将数组a中的内容和数组b中的内容交换"><a href="#x2F-x2F-作业36：将数组a中的内容和数组b中的内容交换" class="headerlink" title="&#x2F;&#x2F;作业36：将数组a中的内容和数组b中的内容交换"></a>&#x2F;&#x2F;作业36：将数组a中的内容和数组b中的内容交换</h1><h1 id="x2F-x2F-作业37：模拟实现库函数-strcpy"><a href="#x2F-x2F-作业37：模拟实现库函数-strcpy" class="headerlink" title="&#x2F;&#x2F;作业37：模拟实现库函数 strcpy"></a>&#x2F;&#x2F;作业37：模拟实现库函数 strcpy</h1><h1 id="x2F-x2F-作业38：模拟实现库函数-strlen"><a href="#x2F-x2F-作业38：模拟实现库函数-strlen" class="headerlink" title="&#x2F;&#x2F;作业38：模拟实现库函数 strlen"></a>&#x2F;&#x2F;作业38：模拟实现库函数 strlen</h1><h1 id="x2F-x2F-作业39：计算参数n的二进制补码中有几个一-Numberof1"><a href="#x2F-x2F-作业39：计算参数n的二进制补码中有几个一-Numberof1" class="headerlink" title="&#x2F;&#x2F;作业39：计算参数n的二进制补码中有几个一 Numberof1"></a>&#x2F;&#x2F;作业39：计算参数n的二进制补码中有几个一 Numberof1</h1><h1 id="x2F-x2F-作业40：写一个代码判断一个数字是不是2的n次方"><a href="#x2F-x2F-作业40：写一个代码判断一个数字是不是2的n次方" class="headerlink" title="&#x2F;&#x2F;作业40：写一个代码判断一个数字是不是2的n次方"></a>&#x2F;&#x2F;作业40：写一个代码判断一个数字是不是2的n次方</h1><h1 id="x2F-x2F-作业41：打印一个数（n）二进制的奇数位和偶数位（获取一个整数二进制中所有的偶数位和奇数位，分别打印出二进制序列）"><a href="#x2F-x2F-作业41：打印一个数（n）二进制的奇数位和偶数位（获取一个整数二进制中所有的偶数位和奇数位，分别打印出二进制序列）" class="headerlink" title="&#x2F;&#x2F;作业41：打印一个数（n）二进制的奇数位和偶数位（获取一个整数二进制中所有的偶数位和奇数位，分别打印出二进制序列）"></a>&#x2F;&#x2F;作业41：打印一个数（n）二进制的奇数位和偶数位（获取一个整数二进制中所有的偶数位和奇数位，分别打印出二进制序列）</h1><h1 id="x2F-x2F-作业42：交换两个变量（不创建临时变量）"><a href="#x2F-x2F-作业42：交换两个变量（不创建临时变量）" class="headerlink" title="&#x2F;&#x2F;作业42：交换两个变量（不创建临时变量）"></a>&#x2F;&#x2F;作业42：交换两个变量（不创建临时变量）</h1><h1 id="x2F-x2F-作业43：找出2个数的最小公倍数"><a href="#x2F-x2F-作业43：找出2个数的最小公倍数" class="headerlink" title="&#x2F;&#x2F;作业43：找出2个数的最小公倍数"></a>&#x2F;&#x2F;作业43：找出2个数的最小公倍数</h1><h1 id="x2F-x2F-作业44：将一句话的单词进行倒置，标点不倒置，比如-i-like-beijing-经过倒置后变成-beijing-like-i"><a href="#x2F-x2F-作业44：将一句话的单词进行倒置，标点不倒置，比如-i-like-beijing-经过倒置后变成-beijing-like-i" class="headerlink" title="&#x2F;&#x2F;作业44：将一句话的单词进行倒置，标点不倒置，比如 i like beijing. 经过倒置后变成 beijing.like i"></a>&#x2F;&#x2F;作业44：将一句话的单词进行倒置，标点不倒置，比如 i like beijing. 经过倒置后变成 beijing.like i</h1>]]></content>
      
      
      <categories>
          
          <category> c语言练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>破解版我的世界联机+PCL2使用</title>
      <link href="/2022/04/28/%E7%A0%B4%E8%A7%A3%E7%89%88%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C%E8%81%94%E6%9C%BA-PCL2%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/04/28/%E7%A0%B4%E8%A7%A3%E7%89%88%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C%E8%81%94%E6%9C%BA-PCL2%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>去JAVA官网下载最新版的JAVA<br><a href="https://www.java.com/zh-CN/download/manual.jsp">https://www.java.com/zh-CN/download/manual.jsp</a></p><p>去龙猫爱发电，搜龙腾猫跃，找到最新的PCL2并下载<br><a href="https://afdian.net/@LTCat">https://afdian.net/@LTCat</a></p><p>PCL2和JAVA下载教程<br><a href="https://www.bilibili.com/video/BV1U34y1S71y?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1U34y1S71y?spm_id_from=333.337.search-card.all.click</a></p><p>PCL2使用教程<br><a href="https://www.bilibili.com/video/BV1o64y187GJ?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1o64y187GJ?spm_id_from=333.337.search-card.all.click</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 游戏娱乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo+github博客的搭建</title>
      <link href="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h4 id="使用的视频教程"><a href="#使用的视频教程" class="headerlink" title="使用的视频教程"></a>使用的视频教程</h4><p><a href="https://www.bilibili.com/video/BV1Yb411a7ty?spm_id_from=333.880.my_history.page.click">https://www.bilibili.com/video/BV1Yb411a7ty?spm_id_from=333.880.my_history.page.click</a></p><p><a href="https://www.bilibili.com/video/BV19p411f7x9?spm_id_from=333.880.my_history.page.click">https://www.bilibili.com/video/BV19p411f7x9?spm_id_from=333.880.my_history.page.click</a></p><p><a href="https://www.bilibili.com/video/BV1D7411U7Yk?spm_id_from=333.880.my_history.page.click">https://www.bilibili.com/video/BV1D7411U7Yk?spm_id_from=333.880.my_history.page.click</a></p><p><a href="https://www.bilibili.com/video/BV1hJ411X75X?spm_id_from=333.880.my_history.page.click">https://www.bilibili.com/video/BV1hJ411X75X?spm_id_from=333.880.my_history.page.click</a></p><p>####<a href="https://www.bilibili.com/video/BV1mU4y1j72n?spm_id_from=333.880.my_history.page.click">https://www.bilibili.com/video/BV1mU4y1j72n?spm_id_from=333.880.my_history.page.click</a>   —- b站教程</p><h4 id="https-blog-csdn-net-help-child-article-details-124186644-—-个人博客教程"><a href="#https-blog-csdn-net-help-child-article-details-124186644-—-个人博客教程" class="headerlink" title="https://blog.csdn.net/help_child/article/details/124186644  —- 个人博客教程"></a><a href="https://blog.csdn.net/help_child/article/details/124186644">https://blog.csdn.net/help_child/article/details/124186644</a>  —- 个人博客教程</h4><p>看视频来操作</p><h3 id="简述下具体过程"><a href="#简述下具体过程" class="headerlink" title="简述下具体过程"></a>简述下具体过程</h3><p>#第一步，下载Node   从下面官网下载<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-20-32.png"><br><a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a><br><a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a><br>两个链接都是node的下载地方，我用的第二个链接<br>版本的选择：小白就选择长期支持版吧.</p><p>下载完的压缩包或者安装程序放在自己喜欢的文件夹里<br>ps：下载下来的是安装程序，需要双击运行.然后一直下一步下一步就好了</p><h1 id="第二步，下载-git-从下面官网下载"><a href="#第二步，下载-git-从下面官网下载" class="headerlink" title="第二步，下载 git  从下面官网下载"></a>第二步，下载 git  从下面官网下载</h1><p><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-20-58.png"><br><a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><br>自己是什么系统就下什么版本的</p><p>下载完的压缩包或者安装程序放在自己喜欢的文件夹里<br>ps：下载下来的是安装程序，需要双击运行.然后一直下一步下一步就好</p><h1 id="第三步，验证一下，软件有没有下载成功"><a href="#第三步，验证一下，软件有没有下载成功" class="headerlink" title="第三步，验证一下，软件有没有下载成功"></a>第三步，验证一下，软件有没有下载成功</h1><p>可以在桌面&#x3D;&#x3D;空白处&#x3D;&#x3D;右击鼠标，打开&#x3D;&#x3D;git bash here&#x3D;&#x3D;<br>也可以win+r，打开cmd</p><p>随便挑一个打开，我用的是git打开<br>分别输入<br>git –version<br>输入完回车运行后在输入下一条，输出的应该是类型版本号的东西就说明软件装好了<br>node -v<br>输入完回车运行后在输入下一条，输出的应该是类型版本号的东西就说明软件装好了<br>npm -v<br>输入完回车运行后在输入下一条，输出的应该是类型版本号的东西就说明软件装好了<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-21-31.png"></p><h1 id="第四步，安装hexo"><a href="#第四步，安装hexo" class="headerlink" title="第四步，安装hexo"></a>第四步，安装hexo</h1><p>在你喜欢的位置建一个博客（blog）的文件夹<br>在blog文件下右击打开&#x3D;&#x3D;git bash here&#x3D;&#x3D;打开后可以看到路径是blog<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-22-22.png"></p><p>输入：npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a><br>代码输完，回车运行完，在输下一个</p><p>在输入：npm install hexo-cli -g<br>这代码的意思是下载hexo，这里我用的是国内淘宝镜像，下载快<br>用hexo自己的可能需要魔法上网<br>下载完之后输入hexo -v，看看是否安装完成<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-23-08.png"></p><h1 id="第五步-创建博客的基本文件"><a href="#第五步-创建博客的基本文件" class="headerlink" title="第五步.创建博客的基本文件"></a>第五步.创建博客的基本文件</h1><p>在blog文件夹下右击打开&#x3D;&#x3D;git bash here&#x3D;&#x3D;<br>输入：hexo init 回车<br>等待一会，可以看见本来什么都没有的blog文件夹下出现了很多文件就对了<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-24-13.png"><br>如果没出现很多文件就再来一遍hexo init<br>成功后<br>输入hexo s<br>会输出一段话，和一个类型网页链接的东西.<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-24-47.png"><br>复制粘贴到浏览器打开<br>成功打开的话，就说明&#x3D;&#x3D;本地&#x3D;&#x3D;博客创建成功了<br>ctrl+c关闭本地博客，注：是直接在键盘上嗯ctrl+c，不是输入到命令窗口里<br>想要在打开本地博客就在hexo s</p><h1 id="第六步，注册github"><a href="#第六步，注册github" class="headerlink" title="第六步，注册github"></a>第六步，注册github</h1><p><a href="https://github.com/">https://github.com/</a><br>推荐用魔法上网，github还蛮卡的<br>github起的名字后面会用到，建议起个阳间一点的.</p><h1 id="第七步，生成SSH-KEY-和github进行绑定"><a href="#第七步，生成SSH-KEY-和github进行绑定" class="headerlink" title="第七步，生成SSH KEY,和github进行绑定"></a>第七步，生成SSH KEY,和github进行绑定</h1><p>这一步解释一下就是把本地的博客放到github的服务器上，这样别人就可以在线浏览你的博客了.<br>随便进入一个文件夹（不管进的哪个文件夹不影响后面操作的不要钻牛角尖），在&#x3D;&#x3D;空白&#x3D;&#x3D;处点击右键，点击Git Bash Here（注意一定要在空白处点击右键）<br>执行”ssh”命令，检测一下电脑有没安装ssh，默认是已经安装了的<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-18-55.png"></p><p>接着执行”ssh-keygen -t rsa -C “邮箱地址” ”邮箱地址输入自己注册github账号时的邮箱地址，执行成功后界面如下<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-29-30.png"><br><strong>&#x3D;&#x3D;注意了，这里输完要按几下回车（是4下还是几下来着，我忘了）看到下面的框框出来就好了&#x3D;&#x3D;</strong><br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-31-07.png"><br>这一步的效果就是&#x3D;&#x3D;生成&#x3D;&#x3D;&#x3D;&#x3D;公钥&#x3D;&#x3D;和&#x3D;&#x3D;私钥&#x3D;&#x3D;<br>私钥自己放着，公钥后面要用</p><p>然后在c盘<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-34-47.png"><br>找到用户（有的人这里可能不是用户，是users）<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-37-01.png"><br>找到ASUS（有的人可能是administrator）<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-38-46.png"><br>找到.ssh<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-39-46.png"><br>找到id.rsa.pub(id.rsa是&#x3D;&#x3D;私钥&#x3D;&#x3D;，id.rsa.pub是&#x3D;&#x3D;公钥&#x3D;&#x3D;)<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-40-36.png"><br>我们要的是公钥，用记事本，或者vscode打开（只要能完整显示&#x3D;&#x3D;id.rsa.pub&#x3D;&#x3D;里面内容就好.）<br>打开后全选复制.<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-44-40.png"><br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-45-02.png"><br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-45-16.png"><br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-45-28.png"><br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-45-53.png"><br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-46-14.png"><br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-46-34.png"></p><h1 id="第八步，部署到github平台上"><a href="#第八步，部署到github平台上" class="headerlink" title="第八步，部署到github平台上"></a>第八步，部署到github平台上</h1><p>注册账号时要记住自己的用户名和邮箱哦，后面会用到。</p><p><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-50-55.png"></p><p>版权声明：本文为CSDN博主「忘尘游」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/help_child/article/details/124186644">https://blog.csdn.net/help_child/article/details/124186644</a></p><p>####复制仓库的地址<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-51-50.png"></p><p>打开blog下的_config.yml打开（用能编辑的软件打开，vscode或者记事本吧）<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-53-32.png"><br>修改里面的内容，红圈框起来的改成你刚才你在github复制的地址，记得:后面要有一个空格<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-56-17.png"><br>修改保存好就可以关闭了</p><p>接着在&#x3D;&#x3D;Blog文件夹&#x3D;&#x3D;下面打开Git Bash Here<br>执行”npm install hexo-deployer–git –save”<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-12-58-32.png"><br>在执行hexo g<br>运行完别关</p><p>#关键来了，这一步是把你的博客弄成在线浏览，别人可以浏览的步骤</p><h3 id="续上面的"><a href="#续上面的" class="headerlink" title="续上面的"></a>续上面的</h3><p>###在执行hexo d</p><h3 id="这上面的操作都是为了这一步"><a href="#这上面的操作都是为了这一步" class="headerlink" title="这上面的操作都是为了这一步."></a>这上面的操作都是为了这一步.</h3><h3 id="这一步就是把你本地的文件放到github的仓库里，这样别人才能在线浏览"><a href="#这一步就是把你本地的文件放到github的仓库里，这样别人才能在线浏览" class="headerlink" title="这一步就是把你本地的文件放到github的仓库里，这样别人才能在线浏览."></a>这一步就是把你本地的文件放到github的仓库里，这样别人才能在线浏览.</h3><h3 id="注意：就算你本地的博客关闭了，在线的博客不会关闭"><a href="#注意：就算你本地的博客关闭了，在线的博客不会关闭" class="headerlink" title="注意：就算你本地的博客关闭了，在线的博客不会关闭."></a>注意：就算你本地的博客关闭了，在线的博客不会关闭.</h3><h3 id="本地的博客每次写完，保存后要hexo-g（我不知道怎么描述，就类似于把你写好的内容生成编译一下？），然后在hexo-s（开本地博客）"><a href="#本地的博客每次写完，保存后要hexo-g（我不知道怎么描述，就类似于把你写好的内容生成编译一下？），然后在hexo-s（开本地博客）" class="headerlink" title="本地的博客每次写完，保存后要hexo g（我不知道怎么描述，就类似于把你写好的内容生成编译一下？），然后在hexo s（开本地博客）"></a>本地的博客每次写完，保存后要hexo g（我不知道怎么描述，就类似于把你写好的内容生成编译一下？），然后在hexo s（开本地博客）</h3><h3 id="执行hexo-d命令的时候，会跳出一个网址，类似于授权"><a href="#执行hexo-d命令的时候，会跳出一个网址，类似于授权" class="headerlink" title="执行hexo d命令的时候，会跳出一个网址，类似于授权."></a>执行hexo d命令的时候，会跳出一个网址，类似于授权.</h3><h3 id="你打开网站发现授权按钮是点不了的，在授权按钮下面有一串小字，你翻译下看看，是不是让你跳转到某个网址"><a href="#你打开网站发现授权按钮是点不了的，在授权按钮下面有一串小字，你翻译下看看，是不是让你跳转到某个网址" class="headerlink" title="你打开网站发现授权按钮是点不了的，在授权按钮下面有一串小字，你翻译下看看，是不是让你跳转到某个网址"></a>你打开网站发现授权按钮是点不了的，在授权按钮下面有一串小字，你翻译下看看，是不是让你跳转到某个网址</h3><h3 id="是的话就复制网址跳转，跳转后是一片空白-会出现一个窗口，是然你输入github的账户名，（注意！是名字，不是邮箱）"><a href="#是的话就复制网址跳转，跳转后是一片空白-会出现一个窗口，是然你输入github的账户名，（注意！是名字，不是邮箱）" class="headerlink" title="是的话就复制网址跳转，跳转后是一片空白.会出现一个窗口，是然你输入github的账户名，（注意！是名字，不是邮箱）"></a>是的话就复制网址跳转，跳转后是一片空白.会出现一个窗口，是然你输入github的账户名，（注意！是名字，不是邮箱）</h3><h3 id="名字在哪里找？-红圈就是你的名字"><a href="#名字在哪里找？-红圈就是你的名字" class="headerlink" title="名字在哪里找？  红圈就是你的名字"></a>名字在哪里找？  红圈就是你的名字</h3><p><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-13-10-21.png"><br>输入后，会出现第二个窗口，这里之前是让你输入github密码的，但是现在改成令牌了</p><h1 id="生成令牌"><a href="#生成令牌" class="headerlink" title="生成令牌"></a>生成令牌</h1><p><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-13-12-34.png"><br>#####找到Developer settings(看具体名字找，别看图中位置找，随着更新，位置会变的)<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-13-13-21.png"><br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-13-15-36.png"><br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-13-15-58.png"><br>1.输入自己喜欢的东西<br>2.看着选，都无所谓  我选了30天<br>3.自己看选，无所谓，我全勾<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-13-18-09.png"></p><h4 id="！！！！！！！注意了，生成后出现的令牌只会出现一次，记得保存下来！！！！！！！！！！！"><a href="#！！！！！！！注意了，生成后出现的令牌只会出现一次，记得保存下来！！！！！！！！！！！" class="headerlink" title="！！！！！！！注意了，生成后出现的令牌只会出现一次，记得保存下来！！！！！！！！！！！"></a>！！！！！！！注意了，生成后出现的令牌只会出现一次，记得保存下来！！！！！！！！！！！</h4><p>####回到刚才要输入密码的窗口，把令牌复制进去.回车结束<br>等待程序运行完，就完成在线博客的创建了<br>你的网页就是下面红线画出来的<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-13-22-43.png"><br>###———————————————————–<br>在hexo d的步骤里会出现错误.<br>1.错误：提示网络啊，上传什么的超时之类的，就是网不好，需要魔法上网<br>2.错误：无法自动找到检测邮箱地址和地址什么的，<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-13-28-33.png"><br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-13-30-13.png"><br>按照图中修改<br><img src="/2022/04/28/%E4%BD%BF%E7%94%A8Hexo-github%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/2022-04-28-13-31-01.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c语言中阶</title>
      <link href="/2022/04/28/c%E8%AF%AD%E8%A8%80%E4%B8%AD%E9%98%B6/"/>
      <url>/2022/04/28/c%E8%AF%AD%E8%A8%80%E4%B8%AD%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="———————————————————————goto语句———————————————————"><a href="#———————————————————————goto语句———————————————————" class="headerlink" title="———————————————————————goto语句———————————————————-"></a>———————————————————————goto语句———————————————————-</h1><p>&#x2F;&#x2F;C语言中提供了可以随意滥用的goto语句和标记跳转符号<br>&#x2F;&#x2F;从理论上降goto语句是没有必要的，实践中没有goto语句也可以很容易写出代码<br>&#x2F;&#x2F;但在某些场合goto语句还是能用到的，最常见的做法就是终止程序在某些深度嵌套的结构的处理过程，例如一次跳出两层或多层循环<br>&#x2F;&#x2F;这种情况使用break是达不到的，break只能从最内层循环退出到上一层循环<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;一个关机程序,只要运行起来电脑会在一段时间内关机；如果输入：我是猪，就取消关机.<br>&#x2F;&#x2F;      shutdown -s -t 60<br>&#x2F;&#x2F;shut down是英文关闭的意思<br>&#x2F;&#x2F;-s表示设置关机<br>&#x2F;&#x2F;-t表示设置时间<br>&#x2F;&#x2F;60表示设置的时间<br>&#x2F;&#x2F;shutdown -a取消关机<br>&#x2F;&#x2F;c语言提供了一个函数system()–执行系统命令</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char c[20] = &#123; 0 &#125;;</span></span><br><span class="line"><span class="comment">//system(&quot;shutdown -s -t 360&quot;);                       //system引用头文件&lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">//    again:</span></span><br><span class="line"><span class="comment">//printf(&quot;请注意你的电脑在360秒后关机，输入 我是猪 取消关机.&quot;);</span></span><br><span class="line"><span class="comment">//scanf(&quot;%s&quot;, c);</span></span><br><span class="line"><span class="comment">//if (strcmp(c, &quot;我是猪&quot;)==0)                      //比较两个字符串要用strcmp，引用头文件&lt;string.h&gt;</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//system(&quot;shutdown -a&quot;);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//goto again;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;goto语句只能在一个函数范围内跳转，不能跨函数</p><h1 id="—————————————————————-函数讲解——————————————————————–"><a href="#—————————————————————-函数讲解——————————————————————–" class="headerlink" title="—————————————————————-函数讲解——————————————————————–"></a>—————————————————————-函数讲解——————————————————————–</h1><p>&#x2F;&#x2F;通过各种网站软件自己学习各种库函数<br>&#x2F;&#x2F;库函数功能有限，我们要自己创造函数.<br>&#x2F;&#x2F;函数返回类型写成 void，表示这个函数不返回任何值，也不需要返回.<br>&#x2F;&#x2F;一个函数只能返回（return）一个值，可以写多个return但是最后只能返回一个.<br>&#x2F;&#x2F;数组传到函数里，实际传递的不是数组本身，只传过去数组首元素的地址.<br>&#x2F;&#x2F;作业：创建一个函数求</p><p>&#x2F;&#x2F;1.判断100-200之间的素数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int is_Prime_number(int a)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int j = 0;</span></span><br><span class="line"><span class="comment">//for (j = 2; j &lt; a; j++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (a % j  == 0)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return 1;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int i;</span></span><br><span class="line"><span class="comment">//int con = 0;</span></span><br><span class="line"><span class="comment">//for (i = 100; i &lt;= 200; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (is_Prime_number(i) == 1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//con++;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d &quot;, i);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;\n%d&quot;, con);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;2.打印1000-2000之间的闰年</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int is_leap_year(int a)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (a % 4 == 0 &amp;&amp; a % 100 != 0||a%400==0)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return 1;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int i;</span></span><br><span class="line"><span class="comment">//for (i = 1000; i &lt;= 2000; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (is_leap_year(i) == 1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d &quot;, i);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;3.在一个1-10的有序数组中查找一个值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int search(int arr[], int key, int sz)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int left = 0;</span></span><br><span class="line"><span class="comment">//int right = sz-1;</span></span><br><span class="line"><span class="comment">//while (left &lt;=right) </span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int mid = (left + right) / 2;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//if (arr[mid] &gt; key)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//right = mid - 1;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else if (arr[mid] &lt; key)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//left = mid + 1;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return mid;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return -1;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int arr[] = &#123; 1,2,3,4,5,6,7,8,9,10 &#125;;</span></span><br><span class="line"><span class="comment">//int key = 7;</span></span><br><span class="line"><span class="comment">//int sz = sizeof(arr) / sizeof(arr[0]);</span></span><br><span class="line"><span class="comment">//int ret = search(arr,key,sz);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//if (-1 == ret )</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;找不到&quot;);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;找到了是：%d&quot;, ret);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;4.写一个函数， 每调用一次函数，num的值就会+1</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//void add(int*num)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//(*num)++;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int num = 0;</span></span><br><span class="line"><span class="comment">//add(&amp;num);</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, num);</span></span><br><span class="line"><span class="comment">//add(&amp;num);</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, num);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="———————————————————函数的嵌套调用和链式访问——————————————————————"><a href="#———————————————————函数的嵌套调用和链式访问——————————————————————" class="headerlink" title="———————————————————函数的嵌套调用和链式访问——————————————————————-"></a>———————————————————函数的嵌套调用和链式访问——————————————————————-</h1><p>&#x2F;&#x2F;printf这个函数返回值，是打印在屏幕上的字符的个数.<br>&#x2F;&#x2F; 函数的声明放在头文件里.<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;函数的嵌套，函数可以在另一个函数中使用，但是不可以在一个函数中定义一个函数.<br>&#x2F;&#x2F;链式访问：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = strlen(&quot;abc&quot;);</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, a);</span></span><br><span class="line"><span class="comment">////链式访问直接可以写成   printf(&quot;%d&quot;, strlen(&quot;abc&quot;));</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char a[6] = &#123; &#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27; &#125;;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, sizeof(a));</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;<br>&#x2F;&#x2F;函数声明</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 30;</span></span><br><span class="line"><span class="comment">//int b = 40;</span></span><br><span class="line"><span class="comment">//int c = 0;</span></span><br><span class="line"><span class="comment">//int add(int, int);//函数声明-告诉编译器参数是什么返回类型是什么，但是具体存不存在无所谓 </span></span><br><span class="line"><span class="comment">//c=add(a, b); </span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, c);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">////函数的定义</span></span><br><span class="line"><span class="comment">//int add(int x, int y)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return x + y;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="——————————————————————–函数递归——————————————————————"><a href="#——————————————————————–函数递归——————————————————————" class="headerlink" title="——————————————————————–函数递归——————————————————————-"></a>——————————————————————–函数递归——————————————————————-</h1><p>&#x2F;&#x2F;递归–函数自己调用自己.<br>&#x2F;&#x2F;递归层次不能太深，否则栈溢出.<br>&#x2F;&#x2F;递归的两个必要条件<br>&#x2F;&#x2F;1.存在限制条件，当满足这个限制条件，递归便不在进行.<br>&#x2F;&#x2F;2.每次递归调用之后越来越接近这个限制条件.<br>&#x2F;&#x2F;练习1.接受一个整形值（无符号），按照顺序打印他的每一位.例如：输入：1234，打印1 2 3 4.<br>&#x2F;&#x2F;%u – 无符号整形.<br>&#x2F;&#x2F;unsigned –无符号整形.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//void print(unsigned int n)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (n&gt;9)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//print(n / 10);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d &quot;, n % 10);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//unsigned int num = 0;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%u&quot;, &amp;num);</span></span><br><span class="line"><span class="comment">//print(num);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;练习2.编写函数不允许创建临时变量，求字符串长度.<br>&#x2F;&#x2F;普通方式实现，因为创建了c这个临时变量，所以不符合题目要求.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int my_strlen(char* str)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int c = 0;                </span></span><br><span class="line"><span class="comment">//while (*str != &#x27;\0&#x27;)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//c++;</span></span><br><span class="line"><span class="comment">//str++;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return c;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char arr[] = &quot;bit&quot;;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, my_strlen(arr));</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用递归的方式实现</span></span><br><span class="line"><span class="comment">//int my_strlen(char* str)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (*str != &#x27;\0&#x27;) </span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return 1 + my_strlen(str + 1);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char arr[] = &quot;bit&quot;;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, my_strlen(arr));</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;递归与迭代<br>&#x2F;&#x2F;循环是迭代的一种方式方式.<br>&#x2F;&#x2F;练习3.求n的阶乘</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;, &amp;a);</span></span><br><span class="line"><span class="comment">//int i = 0;</span></span><br><span class="line"><span class="comment">//int b = 1;</span></span><br><span class="line"><span class="comment">//for (i = 1; i &lt;= a; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//b = i * b;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, b);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;用递归写</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int fac(int n)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (n &lt;= 1)</span></span><br><span class="line"><span class="comment">//return 1;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//return n * fac(n - 1);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;, &amp;a);</span></span><br><span class="line"><span class="comment">//int b = 0;</span></span><br><span class="line"><span class="comment">//b = fac(a);</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, b);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;练习4<br>&#x2F;&#x2F;求第n个斐波那契数（不考虑溢出）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int fib(int n)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (n &lt;= 2)</span></span><br><span class="line"><span class="comment">//return 1;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//return fib(n - 1) + fib(n - 2);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;, &amp;a);</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, fib(a));</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;用循环写斐波那契数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int fib(int n)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 1;</span></span><br><span class="line"><span class="comment">//int b = 1;</span></span><br><span class="line"><span class="comment">//int c = 1;</span></span><br><span class="line"><span class="comment">//while (n &gt; 2)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//c = a + b;</span></span><br><span class="line"><span class="comment">//a = b;</span></span><br><span class="line"><span class="comment">//b = c;</span></span><br><span class="line"><span class="comment">//n--;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return c;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int n = 0;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;, &amp;n);</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, fib(n));</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="———————————————————-函数递归完—————————————————————"><a href="#———————————————————-函数递归完—————————————————————" class="headerlink" title="———————————————————-函数递归完—————————————————————-"></a>———————————————————-函数递归完—————————————————————-</h1><p>&#x2F;&#x2F;作业：编写程序数一下1-100的所有整数中出现多少个9</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int i;</span></span><br><span class="line"><span class="comment">//int c = 0;</span></span><br><span class="line"><span class="comment">//for (i = 1; i &lt;= 100; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (i % 10 == 9)</span></span><br><span class="line"><span class="comment">//c++;</span></span><br><span class="line"><span class="comment">//if (i / 10 == 9)</span></span><br><span class="line"><span class="comment">//c++;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d &quot;, c);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：计算1&#x2F;1-1&#x2F;2+1&#x2F;3-1&#x2F;4………+1&#x2F;99-1&#x2F;100.的值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//double i = 0.0;</span></span><br><span class="line"><span class="comment">//int b = 1;</span></span><br><span class="line"><span class="comment">//double c = 0.0;</span></span><br><span class="line"><span class="comment">//for (i = 1; i &lt;= 100; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//c += b * 1.0 / i;</span></span><br><span class="line"><span class="comment">//b = -b;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;%lf&quot;, c);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：求10个数中的最大值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int arr[] = &#123; 1,2,3,4,5,6,7,8,9,10 &#125;;</span></span><br><span class="line"><span class="comment">//int i;</span></span><br><span class="line"><span class="comment">//int max = arr[0];</span></span><br><span class="line"><span class="comment">//for (i = 0; i &lt;= 10; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (arr[i] &gt; max)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//max = arr[i];</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：打印乘法口诀表</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int i;</span></span><br><span class="line"><span class="comment">//for (i = 1; i &lt;= 9; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int j;</span></span><br><span class="line"><span class="comment">//for (j = 1; j &lt;= i; j++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d*%d=%-2d &quot;, j, i, i * j);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;\n&quot;);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：字符串逆序不允许使用库函数（可以自己创建和库函数一样的函数）（分别用普通方法和递归写）<br>&#x2F;&#x2F;普通方法</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int my_strlen(char* arr)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (*arr != &#x27;\0&#x27;)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return 1 + my_strlen(arr + 1);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//void strint_reverse(char* arr)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int left = 0;</span></span><br><span class="line"><span class="comment">//int right = my_strlen(arr) - 1;</span></span><br><span class="line"><span class="comment">//while (left &lt; right)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char tmp = arr[left];</span></span><br><span class="line"><span class="comment">//arr[left] = arr[right];</span></span><br><span class="line"><span class="comment">//arr[right] = tmp;</span></span><br><span class="line"><span class="comment">//left++;</span></span><br><span class="line"><span class="comment">//right--;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char arr[] = &quot;789456&quot;;</span></span><br><span class="line"><span class="comment">//strint_reverse(arr);</span></span><br><span class="line"><span class="comment">//printf(&quot;%s&quot;, arr);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;用指针（先接触一下，后期才细讲）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int my_strlen(char* arr)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (*arr != &#x27;\0&#x27;)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return 1 + my_strlen(arr + 1);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//void strint_reverse(char* arr)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int left = 0;</span></span><br><span class="line"><span class="comment">//int right = my_strlen(arr) - 1;</span></span><br><span class="line"><span class="comment">//while (left &lt; right)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char tmp = *(arr+left);</span></span><br><span class="line"><span class="comment">//*(arr+left) = *(arr+right);</span></span><br><span class="line"><span class="comment">//*(arr+right) = tmp;</span></span><br><span class="line"><span class="comment">//left++;</span></span><br><span class="line"><span class="comment">//right--;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char arr[] = &quot;789456&quot;;</span></span><br><span class="line"><span class="comment">//strint_reverse(arr);</span></span><br><span class="line"><span class="comment">//printf(&quot;%s&quot;, arr);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;用递归写</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int my_strlen(char* arr)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (*arr != &#x27;\0&#x27;)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return 1 + my_strlen(arr + 1);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//void reverse_string(char* arr)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char tmp = *arr;</span></span><br><span class="line"><span class="comment">//int len = my_strlen(arr);</span></span><br><span class="line"><span class="comment">//*arr = *(arr+len-1);</span></span><br><span class="line"><span class="comment">//*(arr + len - 1) = &#x27;\0&#x27;;</span></span><br><span class="line"><span class="comment">//if (my_strlen(arr+1) &gt;= 2)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//reverse_string(arr + 1);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//*(arr + len - 1) = tmp;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char arr[] = &quot;abcdef&quot;;</span></span><br><span class="line"><span class="comment">//reverse_string(arr);</span></span><br><span class="line"><span class="comment">//printf(&quot;%s&quot;, arr);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业；写一个递归函数Digitsum(n),输入一个非负整数，返回组成他的数字之和.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int Digitsum(int num)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (num &gt; 9)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return Digitsum(num / 10) + num % 10;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return num;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int num = 0;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;, &amp;num);</span></span><br><span class="line"><span class="comment">//int sum = Digitsum(num);</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, sum);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：编写一个函数计算n的k次方.（递归）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int pow1(int n, int k)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int q = n;</span></span><br><span class="line"><span class="comment">//int p = k - 1;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//if (k == 0)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return 1;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//while (p--)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//n = n * q;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return n;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int n, k;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d%d&quot;, &amp;n, &amp;k);</span></span><br><span class="line"><span class="comment">//int ret=pow1(n, k);</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, ret);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;递归</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//double pow1(int n, int k)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (k == 0.0)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return 1.0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else if (k &gt; 0.0)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return n * pow1(n, k - 1);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return 1.0 / (pow1(n, -k));</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int n, k;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d%d&quot;, &amp;n, &amp;k);</span></span><br><span class="line"><span class="comment">//double ret=pow1(n, k);</span></span><br><span class="line"><span class="comment">//printf(&quot;%lf&quot;, ret);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure><h1 id="———————————————————————-一维数组，二维数组——————————————————————————–"><a href="#———————————————————————-一维数组，二维数组——————————————————————————–" class="headerlink" title="———————————————————————-一维数组，二维数组——————————————————————————–"></a>———————————————————————-一维数组，二维数组——————————————————————————–</h1><p>&#x2F;&#x2F;一维数组–就是平时创建的数组<br>&#x2F;&#x2F;数组–一种相同类型元素的集合.<br>&#x2F;&#x2F;数组是用下标（[]）来访问的，下标是从0开始<br>&#x2F;&#x2F;一维数组在内存中是连续存放的<br>&#x2F;&#x2F;！！！！！！！！！！！！！！！！\0是在字符，字符串数组中才有，整形数组中没有\0.！！！！！！！！！！！！！！！！！！<br>&#x2F;&#x2F;数组的大小可以通过计算得到（sizeof）<br>&#x2F;&#x2F;sizeof会计算整个数组，\0也算在长度里面;sizeof计算数组元素个数<br>&#x2F;&#x2F;                                             strlen求字符串长度不会把\0算进去，但是如果数组有\0存在那他也是这个数组的元素啊，要注意这里求的是数组元素个数.<br>&#x2F;&#x2F;strlen计算到\0为止，\0不算在长度里   strlen用来求字符串长度，整形数组一般不用<br>&#x2F;&#x2F;%p–按地址格式打印—16进制的打印（00000000）<br>&#x2F;&#x2F; printf(“%p”, 0x12); 结果是00000012；<br>&#x2F;&#x2F;16进制输出.<br>&#x2F;&#x2F; printf（”%x”, 0x12）; 结果是12；<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;二维数组<br>&#x2F;&#x2F;arr[行][列]<br>&#x2F;&#x2F;行可以省略，列不可以.二维数组下标也是从0开始<br>&#x2F;&#x2F;二维数组在内存中也是连续的.    行内部连续，跨行也是连续的.<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;数组作为函数参数<br>&#x2F;&#x2F;冒泡排序 bubble_sort()<br>&#x2F;&#x2F;冒泡排序的思想：两两相邻的元素进行比较，并且可能的话需要交换！<br>&#x2F;&#x2F;        冒泡排序<br>&#x2F;&#x2F; 9 8 7 6 5 4 3 2 1 0   &#x2F;&#x2F;第一步9和8比较，因为我要升序，而9比8大，所以9和8交换<br>&#x2F;&#x2F; 8 9 7 6 5 4 3 2 1 0    &#x2F;&#x2F;9和8交换了<br>&#x2F;&#x2F; 8 7 9 6 5 4 3 2 1 0     &#x2F;&#x2F;7和9比较，同理，所以9和7交换了<br>&#x2F;&#x2F; 8 7 6 9 5 4 3 2 1 0     &#x2F;&#x2F;6和9比较，同理，所以9和6交换了<br>                            &#x2F;&#x2F;以此类推<br>&#x2F;&#x2F;最后效果就是，9一步一步往后移动.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//void bubble_sort(int arr[],int sz)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int i;</span></span><br><span class="line"><span class="comment">//for (i = 0; i &lt; sz - 1; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int j = 0;</span></span><br><span class="line"><span class="comment">//for (j = 0; j &lt;sz-1-i ; j++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (arr[j] &gt; arr[j + 1])</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int tmp = arr[j];</span></span><br><span class="line"><span class="comment">//arr[j] = arr[j + 1];</span></span><br><span class="line"><span class="comment">//arr[j + 1] = tmp;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int arr[] = &#123; 9,8,7,6,5,4,3,2,1,0 &#125;;      //这个数组是降序的.</span></span><br><span class="line"><span class="comment">//int sz = sizeof(arr) / sizeof(arr[0]);</span></span><br><span class="line"><span class="comment">//bubble_sort(arr,sz);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;<br>&#x2F;&#x2F;数组名是什么？<br>&#x2F;&#x2F;数组名是数组首元素地址<br>&#x2F;&#x2F;但是有2个例外<br>&#x2F;&#x2F;1.sizeof（数组名）—数组名表示整个数组–计算的是整个数组的大小，单位是字节.<br>&#x2F;&#x2F;2.&amp;数组名—数组名表示整个数组–取出的是整个数的地址<br>&#x2F;&#x2F;数组的地址就是数组首元素的地址<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;优化冒泡排序<br>&#x2F;&#x2F;冒泡排序在循环里不断的比较，如果本来就是有序数组，也会一个一个比较<br>&#x2F;&#x2F;怎么办呢，加上个flag&#x3D;1<br>&#x2F;&#x2F;因为如果说本来就是有序的，那么就不会进if里flag一直都是1；直接跳出循环就可以了.<br>&#x2F;&#x2F;</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//void bubble_sort(int arr[], int sz)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int i;</span></span><br><span class="line"><span class="comment">//int flag = 1;</span></span><br><span class="line"><span class="comment">//for (i = 0; i &lt; sz - 1; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int j = 0;</span></span><br><span class="line"><span class="comment">//for (j = 0; j &lt; sz - 1 - i; j++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (arr[j] &gt; arr[j + 1])</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int tmp = arr[j];</span></span><br><span class="line"><span class="comment">//arr[j] = arr[j + 1];</span></span><br><span class="line"><span class="comment">//arr[j + 1] = tmp;</span></span><br><span class="line"><span class="comment">//flag = 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//if (flag == 1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int arr[] = &#123; 9,8,7,6,5,4,3,2,1,0 &#125;; </span></span><br><span class="line"><span class="comment">//int sz = sizeof(arr) / sizeof(arr[0]);</span></span><br><span class="line"><span class="comment">//bubble_sort(arr, sz);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="————————————————————————-操作符详解————————————————————————————–"><a href="#————————————————————————-操作符详解————————————————————————————–" class="headerlink" title="————————————————————————-操作符详解————————————————————————————–"></a>————————————————————————-操作符详解————————————————————————————–</h1><p>&#x2F;&#x2F;1.算数操作符<br>&#x2F;&#x2F;+ - * &#x2F; %<br>&#x2F;&#x2F;除号想要得到小数，被除数或者除数至少有一个也要是小数<br>&#x2F;&#x2F;模数，取模的两个数必须都是整数.不可以模0和负数.<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;2.移位操作符<br>&#x2F;&#x2F;1.&lt;&lt;–左移操作符   2.&gt;&gt;–右移操作符<br>&#x2F;&#x2F;移位操作符是把要移位的数的二进制位移动一位.<br>&#x2F;&#x2F;左移操作符  现在移动的数是2.  向左移动一位<br>&#x2F;&#x2F; int a&#x3D;2;<br>&#x2F;&#x2F; int b&#x3D;a&lt;&lt;1<br>&#x2F;&#x2F; printf(“%d”, b)   输出4<br>&#x2F;&#x2F; printf(“%d”, a)   输出2<br>&#x2F;&#x2F;    00000000000000000000000000000010     2的32位2进制<br>&#x2F;&#x2F;   00000000000000000000000000000010   向左移动一位        左边丢弃，右边补0<br>&#x2F;&#x2F;    00000000000000000000000000000100     最左边的去掉，最右边的0补上   输出4<br>&#x2F;&#x2F;右移操作符<br>&#x2F;&#x2F; 1.算数右移—-右边丢弃左边补原来的符号位<br>&#x2F;&#x2F; 2.逻辑右移—-右边丢弃，左边补0<br>&#x2F;&#x2F; vs2022用的是算数右移.<br>&#x2F;&#x2F;int a &#x3D; 10<br>&#x2F;&#x2F;int b &#x3D; a &gt;&gt; 1<br>&#x2F;&#x2F;printf(“%d”, b)   输出5<br>&#x2F;&#x2F;printf(“%d”, a)  输出10<br>&#x2F;&#x2F;    00000000000000000000000000001010      10的32位2进制<br>&#x2F;&#x2F;     00000000000000000000000000001010      向右移动一位<br>&#x2F;&#x2F;    00000000000000000000000000000101        因为是正数，所以不管用逻辑还是算数结果都一样.<br>&#x2F;&#x2F;int a &#x3D; -1<br>&#x2F;&#x2F;int b &#x3D;a &gt;&gt; 1<br>&#x2F;&#x2F;printf(“%d”, b)<br>&#x2F;&#x2F;负数：-1<br>&#x2F;&#x2F;存放在内存中<br>&#x2F;&#x2F;-1存放在内存中的是二进制的补码<br>&#x2F;&#x2F;整数的二进制表示形式：有3种<br>&#x2F;&#x2F; 原码：直接根据数值写出的二进制序列就是原码<br>&#x2F;&#x2F; 反码：符号位不变，其他按位取反<br>&#x2F;&#x2F; 补码：反码+1就是补码<br>&#x2F;&#x2F; 正整数的原反补相同<br>&#x2F;&#x2F;-1的原码 10000000000000000000000000000001<br>&#x2F;&#x2F;-1的反码 11111111111111111111111111111110<br>&#x2F;&#x2F;-1的补码 11111111111111111111111111111111      -1在内存中存的就是这个.<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;3.位操作符<br>&#x2F;&#x2F; &amp; —按位与  两个数的32位二进制进行比较，都是1输出1，其他输出0<br>&#x2F;&#x2F; | —按位或  2个数的32位二进制比较，   有一个是1输出1，其他输出0<br>&#x2F;&#x2F; ^ —按位异或 2个数的32位二进制比较，   相同为0，不同为1<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;作业：求一个整数存储在内存中的二进制中的1的个数<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;4.赋值操作符<br>&#x2F;&#x2F; +&#x3D;  -&#x3D;  *&#x3D;  &#x2F;&#x3D;  &gt;&gt;&#x3D;   &lt;&lt;&#x3D;  %&#x3D;  &amp;&#x3D;  |&#x3D;   ^&#x3D;<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;5.单目操作符<br>&#x2F;&#x2F; !  +   -   &amp;    sizeof   ~   –   ++    *   (类型)<br>&#x2F;&#x2F;1.！—逻辑反操作   把真变为假，把假变为真.例：如果数为0，!0 &#x3D;&#x3D; 1;    如果数不为零 !a &#x3D;&#x3D; 0;(a是不为0的任何数)<br>&#x2F;&#x2F;2.&amp; —取地址<br>&#x2F;&#x2F;3.~ —按位取反<br>&#x2F;&#x2F;4. （类型）—–强制类型转换 例，int a&#x3D;3.14  printf(“%d”, a);这样打印会报错，丢失数据.  （int）a&#x3D;3.14  printf（”%d”, a）,我非要用整形打印浮点数，那用强制类型转换就不会报错，数据还是会丢失.<br>&#x2F;&#x2F;5.sizeof() —计算所占空间，单位是字节  sizeof是操作符不是函数<br>&#x2F;&#x2F; int a &#x3D; 10;<br>&#x2F;&#x2F; int arr1[10] &#x3D; { 0 };<br>&#x2F;&#x2F; char arr2[10] &#x3D; { 0 };<br>&#x2F;&#x2F; printf(“%d”, sizeof(a));     4     一个整形占4个字节<br>&#x2F;&#x2F; printf(“%d”, sizeof(int));   4     一个整形占4个字节<br>&#x2F;&#x2F; printf(“%d”, sizeof a);      4     在计算变量的时候括号可以去掉，但是不建议. 一个整形占4个字节<br>&#x2F;&#x2F; printf(“%d”, sizeof(arr1));  40    数组一共有10个int元素，一个数（int）占4个大小，所以是40<br>&#x2F;&#x2F; printf(“%d”, sizeof(arr2));  10    数组一共有10个char元素  一个数（char）占1个大小 所以是10<br>&#x2F;&#x2F; short s &#x3D; 5 ;<br>&#x2F;&#x2F; int a &#x3D; 10 ;<br>&#x2F;&#x2F; printf(“%d”, sizeof(s &#x3D; a + 2) );  2     short是短整形的意思，一个短整型占2个大小<br>&#x2F;&#x2F; printf(“%d”, s );                  5     sizeof括号中放的表达式不参与运算<br>&#x2F;&#x2F;<br>&#x2F;&#x2F; 6.关系操作符<br>&#x2F;&#x2F; &gt;  &lt;  &gt;&#x3D;  &lt;&#x3D;  !&#x3D;  &#x3D;&#x3D;<br>&#x2F;&#x2F;<br>&#x2F;&#x2F; 7.逻辑操作符<br>&#x2F;&#x2F; 1. &amp;&amp; — 逻辑与  逻辑或遇到假（0）就停下不继续算下去   区分   &amp; — 按位与<br>&#x2F;&#x2F; 2. || — 逻辑或  逻辑或遇到真（非0）就停下不继续下去   区分   | — 按位或<br>&#x2F;&#x2F; 小练习34，在 练习作业.c<br>&#x2F;&#x2F;<br>&#x2F;&#x2F; 8.条件操作符<br>&#x2F;&#x2F; 1.条目操作符 exp1 ？ exp2 ：exp3<br>&#x2F;&#x2F;         表达式1结果为真表达式2计算，表达式1结果为假表达式3计算<br>&#x2F;&#x2F; 2.逗号表达式<br>&#x2F;&#x2F; exp1, exp2,exp3,……expN<br>&#x2F;&#x2F; int a &#x3D; 3  b &#x3D; 5  c &#x3D; 0<br>&#x2F;&#x2F; int d &#x3D; (c &#x3D; 5,a &#x3D; c + 3,b &#x3D; a - 4,c +&#x3D; 5 );<br>&#x2F;&#x2F;             a&#x3D;&#x3D;8     b&#x3D;&#x3D;4     c&#x3D;&#x3D;10        d&#x3D;10<br>&#x2F;&#x2F;   从左到右执行，整个表达式的结果是最后一个表达式的结果<br>&#x2F;&#x2F; 3.下标引用.函数调用和结构成员<br>&#x2F;&#x2F; 1.下标引用操作符：[]  一个操作符有他对应的操作数，例arr[a]   arr和a就是他的操作数<br>&#x2F;&#x2F; 2.函数调用操作符：（）    test（）    test是他的操作数   test（a,b）  test和a和b是他的操作数<br>&#x2F;&#x2F; 3.结构成员访问操作符 &#x2F;&#x2F; .    &#x2F;&#x2F;  -&gt;<br>&#x2F;&#x2F;<br>&#x2F;&#x2F; 9.表达式求值<br>&#x2F;&#x2F; 表达式求值的顺序一部分是由操作符的优先级和结合性决定<br>&#x2F;&#x2F; 同样，有的表达式的操作数在求值的过程中可能需要转换为其他类型<br>&#x2F;&#x2F;<br>&#x2F;&#x2F; 10.隐式类型转换<br>&#x2F;&#x2F; 整形提升：在表达式计算时，各种整型首先要提升为int类型，如果int类型不足以表示则要提升为unsigned int类型；然后执行表达式的运算。<br>&#x2F;&#x2F; char a &#x3D; 3;<br>&#x2F;&#x2F; 00000011 &#x3D;&#x3D; a    这里第一个符号位是0所以都补0，如果是1那就都补1<br>&#x2F;&#x2F; 00000000000000000000000000000011 — 整形提升<br>&#x2F;&#x2F; char b &#x3D; 127;<br>&#x2F;&#x2F; 01111111 &#x3D;&#x3D; b<br>&#x2F;&#x2F; 00000000000000000000000001111111 — 整形提升<br>&#x2F;&#x2F; char c &#x3D; a + b;<br>&#x2F;&#x2F; 00000000000000000000000000000011<br>&#x2F;&#x2F; 00000000000000000000000001111111     这里a+b<br>&#x2F;&#x2F; 00000000000000000000000010000010<br>&#x2F;&#x2F; 10000010  &#x3D;&#x3D; c     因为c是char类型所以截断<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;    发现a和b都是char类型，都没有达到一个int的大小<br>&#x2F;&#x2F;     这里就会发生整形提升<br>&#x2F;&#x2F; printf(“%d”, c);  输出  -126<br>&#x2F;&#x2F;    这里c是char类型，但是要输出的是整形，所以发生整形提升<br>&#x2F;&#x2F; 10000010   &#x3D;&#x3D; c<br>&#x2F;&#x2F; 11111111111111111111111110000010    因为符号位是1，所以前面都补1.这是整形提升后的c ，是c的补码<br>&#x2F;&#x2F; 11111111111111111111111110000001    要转换成原码才能打印， 这里是c的反码<br>&#x2F;&#x2F; 10000000000000000000000001111110    这里是原码  printf那里读的就是这个，这就是-126<br>&#x2F;&#x2F; char a &#x3D; 0xb6;<br>&#x2F;&#x2F; short b &#x3D; 0xb600;<br>&#x2F;&#x2F; int c &#x3D; 0xb6000000;<br>&#x2F;&#x2F; if(a &#x3D;&#x3D; 0xb6)<br>&#x2F;&#x2F;printf(a”);    因为a是char类型，在计算的时候发生整形提升，a就不是0xb6  所以不打印<br>&#x2F;&#x2F; if(b &#x3D;&#x3D; 0xb600);<br>&#x2F;&#x2F;printf(“b”);     因为b是short类型，在计算的时候发生整形提升，b也不是原来的数，所以不打印<br>&#x2F;&#x2F; if(c &#x3D;&#x3D; 0xb6000000)<br>&#x2F;&#x2F;printf(“c”);       因为c是int类型，在计算的时候不需要整形提升，c还是c ，所以最后结果是打印 c<br>&#x2F;&#x2F;<br>&#x2F;&#x2F; 11.算数转换<br>&#x2F;&#x2F;如果某个操作符的各个操作数属于不同的类型，那么除非其中一个操作数的转换为另一个操作数的类型，否则操作就无法进行。下面的层次体系称为寻常算术转换。<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;12.操作符的属性<br>&#x2F;&#x2F;1.操作符的优先级<br>&#x2F;&#x2F;2.操作符的结合性<br>&#x2F;&#x2F;3.是否控制求值顺序。<br>&#x2F;&#x2F;两个相邻的操作符先执行哪个？<br>&#x2F;&#x2F;取决于他们的优先级，如果两者优先级相同，取决于他们的结合性.<br>&#x2F;&#x2F;int fun()<br>&#x2F;&#x2F;{<br>&#x2F;&#x2F;static int count &#x3D; 1;<br>&#x2F;&#x2F;return ++count;<br>&#x2F;&#x2F;}<br>&#x2F;&#x2F;int main()<br>&#x2F;&#x2F;{                                                            &#x2F;&#x2F;计算过程：先走进fun(),count初始化为1，++count，第一个fun（）就是2，<br>&#x2F;&#x2F;int answer;                                                           在走进第二2，因为被static修饰过，所以第二次进fun（）的时候count不会被再次创建，count不会被初始化为1，count还是2<br>&#x2F;&#x2F;answer &#x3D; fun() - fun() * fun();   2 - 3 * 4 &#x3D;-10                       所以第二个fun（）为3，同理，第三个fun()是4.<br>&#x2F;&#x2F;printf(“%d”, answer);               输出-10            ！！但是，因为fun（）函数优先级一样，并不知道哪个fun先算，所以这个是问题代码.<br>&#x2F;&#x2F;return 0;<br>&#x2F;&#x2F;}<br>&#x2F;&#x2F;总结：如果我们写出的表达式不能确定唯一的计算路径，那这个表达式就是存在问题的.</p><h1 id="——————————————————————————–操作符详解完——————————————————————————"><a href="#——————————————————————————–操作符详解完——————————————————————————" class="headerlink" title="——————————————————————————–操作符详解完——————————————————————————"></a>——————————————————————————–操作符详解完——————————————————————————</h1><p>&#x2F;&#x2F;作业：1.实现函数init（）初始化数组为0<br>&#x2F;&#x2F;      2.实现print（）打印数组的每个元素<br>&#x2F;&#x2F;      3.实现对reverse（）函数完成数组元素的逆置   和字符串逆序一样</p><p>&#x2F;&#x2F;作业：将数组a中的内容和数组b中的内容交换</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a[] = &#123; 1,3,5,7,9 &#125;;</span></span><br><span class="line"><span class="comment">//int b[] = &#123; 2,4,6,8,10 &#125;;</span></span><br><span class="line"><span class="comment">//int sz = sizeof(a) / sizeof(a[0]);</span></span><br><span class="line"><span class="comment">//int i;</span></span><br><span class="line"><span class="comment">//for (i = 0; i &lt; sz; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int tmp = a[i];</span></span><br><span class="line"><span class="comment">//a[i] = b[i];</span></span><br><span class="line"><span class="comment">//b[i] = tmp;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="———————————————————————————–指针初阶———————————————————————————–"><a href="#———————————————————————————–指针初阶———————————————————————————–" class="headerlink" title="———————————————————————————–指针初阶———————————————————————————–"></a>———————————————————————————–指针初阶———————————————————————————–</h1><p>&#x2F;&#x2F;指针是编程语言中的一个对象，利用地址，他的值直接指向存在电脑储存器中另一个地方的值.由于同过指针能找到锁需要的变量单元，可以说地址指向该变量单元，因此，将地址形象化<br>&#x2F;&#x2F;的称为指针意思是通过他能找到以他为地址的内存单元<br>&#x2F;&#x2F;一个指针占4个字节<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;1.指针类型的意义<br>&#x2F;&#x2F;   1.指针类型决定了：指针解引用权限有多大<br>&#x2F;&#x2F;   2.指针类型决定了，指针走一步，能走多远（步长）<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;int a &#x3D; 0x11223344;   在内存中 44 33 22 11    4个字节<br>&#x2F;&#x2F;char* pc &#x3D; &amp;a;        因为char所以操作权限只有1个字节<br>&#x2F;&#x2F;*pc &#x3D; 0;              00 33 22 11<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;2.野指针<br>&#x2F;&#x2F; 1.指针未初始化<br>&#x2F;&#x2F;就是指指针指向的位置是不可知的（随机的，不确定的，没有明确限制的）<br>&#x2F;&#x2F;int &#x3D; <em>p；     野指针      p是一个局部的指针变量，局部变量不初始化的话，默认是随机值<br>&#x2F;&#x2F;<em>p &#x3D; 20;       非法访问内存了<br>&#x2F;&#x2F; 2.指针越界访问<br>&#x2F;&#x2F; int arr[10] &#x3D; { 0 };<br>&#x2F;&#x2F; int * p &#x3D; arr;<br>&#x2F;&#x2F; int i &#x3D; 0;<br>&#x2F;&#x2F; for(i&#x3D;0;i&lt;&#x3D;10;i++)       循环了11次，但是一共只有10个位置，超过了p的最多位置，这就是越界访问<br>&#x2F;&#x2F; {<br>&#x2F;&#x2F;<em>p &#x3D; i;<br>&#x2F;&#x2F;p++;<br>&#x2F;&#x2F; }<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;3.指针指向的空间释放<br>&#x2F;&#x2F; 解释：就本来有个指针p，指向某个地址，这没问题，过了一会这个地址里的内容因为某些原因被释放了，被干掉了，那这个指针也变成了野指针<br>&#x2F;&#x2F;这里简单提示一下，会在动态内存开辟的时候讲<br>&#x2F;&#x2F; int</em> test()<br>&#x2F;&#x2F; {                               &#x2F;&#x2F;创建一个test函数，在test函数中创建一个a，返回a的地址，回到主函数后用p来接收，最后解引用通过</em>p来改变a的值<br>&#x2F;&#x2F;int a &#x3D; 10;                &#x2F;&#x2F;a的地址是会如实的放到p里，但是a出了test函数就被销毁了，这时再用</em>p&#x3D;20，就是非法访问内存.<br>&#x2F;&#x2F;return &amp;a;<br>&#x2F;&#x2F; }<br>&#x2F;&#x2F; int main()<br>&#x2F;&#x2F; {<br>&#x2F;&#x2F;int * p &#x3D; test();<br>&#x2F;&#x2F;*p &#x3D; 20;<br>&#x2F;&#x2F;return 0;<br>&#x2F;&#x2F; }<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;4.如何规避野指针<br>&#x2F;&#x2F; 1.指针初始化<br>&#x2F;&#x2F;      当前不知道p应该初始化为什么地址的时候（下面可能会初始化），直接先初始化为NULL .    int *p &#x3D; NULL（空指针）;<br>&#x2F;&#x2F;      初始化成空指针的指针是不能访问的.不能用的.<br>&#x2F;&#x2F; 2.小心指针越界<br>&#x2F;&#x2F;      c语言本身是不会检查数据的越界行为的<br>&#x2F;&#x2F; 3.指针指向空间释放的时候要及时把它置成NULL<br>&#x2F;&#x2F; 4.指针使用之前检查有效性<br>&#x2F;&#x2F;     if（p !&#x3D; NULL）  判断一下能不能用，是不是空指针<br>&#x2F;&#x2F;<br>&#x2F;&#x2F; 3.指针运算<br>&#x2F;&#x2F;    1.指针加减整数<br>&#x2F;&#x2F;       #define N_VALUES 5        定义一个变量（N_VALUES）为5<br>&#x2F;&#x2F; float values[N_VALUES];     创建类型为单精度浮点数的数组，数组大小为5，也就是N_VALUES的大小<br>&#x2F;&#x2F;       float *vp<br>&#x2F;&#x2F; for(vp &#x3D; &amp;values[0]; vp &lt; &amp;values[N_VALUES];)      &#x2F;&#x2F;vp&#x3D;&amp;values[0]是初始化部分，vp&lt;&amp;values[N_VALUES]是判断部分，后面的调整部分没写，语法上可以不写<br>&#x2F;&#x2F; {<br>&#x2F;&#x2F;*vp++;<br>&#x2F;&#x2F; }<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;     int arr[10] &#x3D; {1,2,3,4,5,6,7,8,9,10};<br>&#x2F;&#x2F;     printf(“%d”, &amp;arr[9] - &amp;arr[0]);      输出9.   指针-指针得到的是两个指针之间的元素个数<br>&#x2F;&#x2F;         指针和指针相减的前提是：两个指针指向同一块空间<br>&#x2F;&#x2F;用指针实现strlen（）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int my_strlen(char* str) </span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char* start = str;                  //先把首元素地址穿过去，然后用start把首元素地址拷贝下来，循环str，直到停下，这时候str就是‘\0’的地址，</span></span><br><span class="line"><span class="comment">//while (*str != &#x27;\0&#x27;)               //用最后一位的地址减去首元素的地址，得到的就是元素个数.</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//str++;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return str - start;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int len = my_strlen(&quot;abcgdfdhdfh&quot;);</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, len);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F; 注意区分指针加减，和，指针加指针，指针减指针的区别<br>&#x2F;&#x2F; 指针减指针得到的是两个指针之间的元素个数<br>&#x2F;&#x2F; 指针加指针并没有什么用<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;5.指针和数组<br>&#x2F;&#x2F; 因为指针就是一个地址，那数组也是一个地址，所以可以写成<br>&#x2F;&#x2F; int arr[] &#x3D; { 0 };<br>&#x2F;&#x2F; int *p &#x3D; arr;<br>&#x2F;&#x2F;<br>&#x2F;&#x2F; p[2] –&gt; *(p+2)<br>&#x2F;&#x2F;<br>&#x2F;&#x2F; arr[2] –&gt; *(arr+2) –&gt; *(2+arr) –&gt; 2[arr]<br>&#x2F;&#x2F;<br>&#x2F;&#x2F; arr[2] &lt;&#x3D;&#x3D;&gt; *(arr+2) &lt;&#x3D;&#x3D;&gt; *(p+2) &lt;&#x3D;&#x3D;&gt; *(2+p) &lt;&#x3D;&#x3D;&gt; *(2+arr) &lt;&#x3D;&#x3D;&gt; 2[arr]<br>&#x2F;&#x2F;<br>&#x2F;&#x2F; 6.二级指针<br>&#x2F;&#x2F;  int a &#x3D; 0 ;<br>&#x2F;&#x2F;  int * pa &#x3D; &amp;a ;    &#x2F;&#x2F;一级指针<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;  int ** ppa &#x3D; &amp;pa ;   &#x2F;&#x2F;二级指针  *的位置无所谓，贴着int或者ppa都一样.<br>&#x2F;&#x2F;     **ppa &#x3D; 0;       &#x2F;&#x2F;解引用也要两颗星<br>&#x2F;&#x2F;  return 0 ;<br>&#x2F;&#x2F;<br>&#x2F;&#x2F; 7.指针数组<br>&#x2F;&#x2F;<br>&#x2F;&#x2F; int arr[10];  &#x2F;&#x2F;整形数组 – 存放整形的数组就是整形数组<br>&#x2F;&#x2F;<br>&#x2F;&#x2F; char ch[5];   &#x2F;&#x2F;字符数组 - 存放的是字符<br>&#x2F;&#x2F;<br>&#x2F;&#x2F; &#x2F;&#x2F;指针数组  –存放指针的数组<br>&#x2F;&#x2F; int * parr[] ;   &#x2F;&#x2F;整形指针的数组<br>&#x2F;&#x2F; char * pch[] ;   &#x2F;&#x2F;字符指针的数组<br>&#x2F;&#x2F; </p><h1 id="—————————————————————————————-指针初阶完—————————————————————————–"><a href="#—————————————————————————————-指针初阶完—————————————————————————–" class="headerlink" title="—————————————————————————————-指针初阶完—————————————————————————–"></a>—————————————————————————————-指针初阶完—————————————————————————–</h1><h1 id="————————————————————————————–结构体初阶——————————————————————————–"><a href="#————————————————————————————–结构体初阶——————————————————————————–" class="headerlink" title="————————————————————————————–结构体初阶——————————————————————————–"></a>————————————————————————————–结构体初阶——————————————————————————–</h1><p>&#x2F;&#x2F;数组 - 一组相同类型的集合<br>&#x2F;&#x2F;<br>&#x2F;&#x2F; 结构体：<br>&#x2F;&#x2F;   也是一些值的集合，但值的类型可以不同！<br>&#x2F;&#x2F; struct – 结构体<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;1.结构体变量的定义和初始化</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//struct b</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//char c;</span></span><br><span class="line"><span class="comment">//short s;</span></span><br><span class="line"><span class="comment">//double d;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//struct stu</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//struct b;</span></span><br><span class="line"><span class="comment">////成员变量    成员变量可以是标量，数组，指针，甚至是其他结构体</span></span><br><span class="line"><span class="comment">//char name[20];  //名字</span></span><br><span class="line"><span class="comment">//int age;       //年龄 </span></span><br><span class="line"><span class="comment">//char id[20];</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;s1,s2;  //这里创建的s1和s2也是结构体的2个变量</span></span><br><span class="line"><span class="comment">////s1和s2是全局变量</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////struct stu s;  //对象</span></span><br><span class="line"><span class="comment">//struct stu s = &#123; &#123;&#x27;w&#x27;,20,3.14&#125;, &quot;张三&quot;,30,&quot;2020305&quot;&#125;;    //结构体初始化，里面的大括号是初始化 struct b 这个结构体.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;2.结构体成员的访问<br>&#x2F;&#x2F;.操作符</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//struct B</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//char c;</span></span><br><span class="line"><span class="comment">//short s;</span></span><br><span class="line"><span class="comment">//double d;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//struct stu                //stu是结构体</span></span><br><span class="line"><span class="comment">//&#123;                        //sb是结构体变量</span></span><br><span class="line"><span class="comment">//                    //下面的s是结构体对象</span></span><br><span class="line"><span class="comment">////结构体成员                   </span></span><br><span class="line"><span class="comment">//struct B sb;</span></span><br><span class="line"><span class="comment">////成员变量    成员变量可以是标量，数组，指针，甚至是其他结构体</span></span><br><span class="line"><span class="comment">//char name[20];  //名字</span></span><br><span class="line"><span class="comment">//int age;       //年龄 </span></span><br><span class="line"><span class="comment">//char id[20];</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;s1, s2;  //这里创建的s1和s2也是结构体的2个变量</span></span><br><span class="line"><span class="comment">////s1和s2是全局变量</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////struct stu s;  //对象</span></span><br><span class="line"><span class="comment">//struct stu s = &#123; &#123;&#x27;w&#x27;,20,3.14&#125;, &quot;张三&quot;,30,&quot;2020305&quot; &#125;;    //结构体初始化，里面的大括号是初始化 struct b 这个结构体.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//printf(&quot;%c\n&quot;, s.sb.c);  //打印s里面sb结构体里面c的值  输出20200305</span></span><br><span class="line"><span class="comment">//printf(&quot;%s\n&quot;, s.id);   //输出 &#x27; w &#x27; </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////  -&gt; 箭头操作符</span></span><br><span class="line"><span class="comment">//struct stu* ps = &amp;s;</span></span><br><span class="line"><span class="comment">//printf(&quot;%c\n&quot;, (*ps).sb.c);  //先找到s，在找到sb，最后找到sb里的c</span></span><br><span class="line"><span class="comment">//printf(&quot;%c\n&quot;, ps-&gt;sb.c);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;3.结构体传参</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//struct B</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//char c;</span></span><br><span class="line"><span class="comment">//short s;</span></span><br><span class="line"><span class="comment">//double d;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//struct stu                //stu是结构体</span></span><br><span class="line"><span class="comment">//&#123;                        //sb是结构体变量</span></span><br><span class="line"><span class="comment">////下面的s是结构体对象</span></span><br><span class="line"><span class="comment">////结构体成员                   </span></span><br><span class="line"><span class="comment">//struct B sb;</span></span><br><span class="line"><span class="comment">////成员变量    成员变量可以是标量，数组，指针，甚至是其他结构体</span></span><br><span class="line"><span class="comment">//char name[20];  //名字</span></span><br><span class="line"><span class="comment">//int age;       //年龄 </span></span><br><span class="line"><span class="comment">//char id[20];</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;s1, s2;  //这里创建的s1和s2也是结构体的2个变量</span></span><br><span class="line"><span class="comment">////s1和s2是全局变量</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//void print1(struct stu t)     //普通</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;%c %d %lf %s %d %s \n&quot;, t.sb.c, t.sb.s, t.sb.d, t.name, t.age, t.id);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//void print2(struct stu* ps)   //指针</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;%c %d %lf %s %d %s &quot;, ps-&gt;sb.c, ps-&gt;sb.s, ps-&gt;sb.d, ps-&gt;name, ps-&gt;age, ps-&gt;id);      </span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////struct stu s;  //对象</span></span><br><span class="line"><span class="comment">//struct stu s = &#123; &#123;&#x27;w&#x27;,20,3.14&#125;, &quot;张三&quot;,30,&quot;2020305&quot; &#125;;    //结构体初始化，里面的大括号是初始化 struct b 这个结构体.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//printf(&quot;%c\n&quot;, s.sb.c);  //打印s里面sb结构体里面c的值  输出20200305</span></span><br><span class="line"><span class="comment">//printf(&quot;%s\n&quot;, s.id);   //输出 &#x27; w &#x27; </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////  -&gt; 箭头操作符</span></span><br><span class="line"><span class="comment">//struct stu* ps = &amp;s;</span></span><br><span class="line"><span class="comment">//printf(&quot;%c\n&quot;, (*ps).sb.c);  //先找到s，在找到sb，最后找到sb里的c</span></span><br><span class="line"><span class="comment">//printf(&quot;%c\n&quot;, ps-&gt;sb.c);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//print1(s);</span></span><br><span class="line"><span class="comment">//print2(&amp;s);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F; 4.参数压栈<br>&#x2F;&#x2F; 栈 - 一种数据结构<br>&#x2F;&#x2F; 先进的后出，后进的先出    可以理解为和弹匣差不多<br>&#x2F;&#x2F; 压栈       压子弹<br>&#x2F;&#x2F; 出栈       用子弹<br>&#x2F;&#x2F; </p><h1 id="—————————————————————————————-结构体初阶完———————————————————————–"><a href="#—————————————————————————————-结构体初阶完———————————————————————–" class="headerlink" title="—————————————————————————————-结构体初阶完———————————————————————–"></a>—————————————————————————————-结构体初阶完———————————————————————–</h1><h1 id="———————————————————————————–调试技巧———————————————————————————–"><a href="#———————————————————————————–调试技巧———————————————————————————–" class="headerlink" title="———————————————————————————–调试技巧———————————————————————————–"></a>———————————————————————————–调试技巧———————————————————————————–</h1><p>&#x2F;&#x2F; 掌握基本的快捷键<br>&#x2F;&#x2F; 熟悉调试的方法，调试中有哪些问题<br>&#x2F;&#x2F; 多刷题，多看书，多调试，多写代码<br>&#x2F;&#x2F; 鹏哥推荐的书籍：<br>&#x2F;&#x2F; 1.《c陷阱和缺陷》<br>&#x2F;&#x2F; 2.《明解C语言》初级和进阶2版<br>&#x2F;&#x2F; 3.《c和指针》<br>&#x2F;&#x2F; 4.《比特c课件》<br>&#x2F;&#x2F; 5.《C语言深度解剖》<br>&#x2F;&#x2F; 6.《C primer plus》  太厚了容易放弃<br>&#x2F;&#x2F; 7.谭浩强的C语言 —- 看起来通俗易懂，但是代码风格写的很差，只看他的语法，不模仿代码</p><h1 id="———————————————————————-调试模拟实现字符串相关函数———————————————————————"><a href="#———————————————————————-调试模拟实现字符串相关函数———————————————————————" class="headerlink" title="———————————————————————-调试模拟实现字符串相关函数———————————————————————"></a>———————————————————————-调试模拟实现字符串相关函数———————————————————————</h1><p>&#x2F;&#x2F;作业：模拟实现库函数 strcpy<br>&#x2F;&#x2F;strcpy — 字符串拷贝<br>&#x2F;&#x2F;strcpy会吧字符串里的\0也拷贝过来<br>&#x2F;&#x2F; strcpy（目标空间的起始地址，源空间的起始地址）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char arr1[20] = &#123; 0 &#125;;     //arr1里的内容是 0 0 0 0 0 0 0 0 0..... 一共20个0</span></span><br><span class="line"><span class="comment">//char arr2[] = &quot;hello&quot;;    //arr2里的内容是 h e l l o \0 ;</span></span><br><span class="line"><span class="comment">//strcpy(arr1,arr2 );          //此时arr1里的内容是 h e l l o \0 0 0 0 0 0 0 ......14个0</span></span><br><span class="line"><span class="comment">//printf(&quot;%s&quot;, arr1);       //输出 hello  因为打印到\0就停止打印了，不管后面还有没有内容.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//char* my_strcpy(char* arr1, const char* arr2)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">// strcpy这个库函数，其实返回的是目标空间的起始地址</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// 我们要是想返回目标空间的的起始地址直接return arr1；是不行的</span></span><br><span class="line"><span class="comment">// char *ret = arr1;</span></span><br><span class="line"><span class="comment">// return ret；</span></span><br><span class="line"><span class="comment">// 需要新建一个指针在返回</span></span><br><span class="line"><span class="comment">// 返回ret后，同样的要把函数返回值从void变成char*</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//             const在这里的作用：防止写反 本来是把arr2里的复制给arr1，如果写反了，写成了arr1复制给arr2那么程序就会报错</span></span><br><span class="line"><span class="comment">// const --- 限定一个变量不允许被改变</span></span><br><span class="line"><span class="comment">// const修饰变量，这个变量就被称为常变量，不能被修改，但是本质上还是变量</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// assert(arr1 != &quot;NULL&quot;);   --- 断言</span></span><br><span class="line"><span class="comment">// assert(arr2 != &quot;NULL&quot;);</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// assert --- 断言 引头文件#include &lt;assert.h&gt;;</span></span><br><span class="line"><span class="comment">// 断言的作用：如果满足某个条件不允许某件事的时候，断言就会报个错出来.</span></span><br><span class="line"><span class="comment">//             说人话：在这个场景里，如果传过来空指针，就会报错，并告诉你错在哪一行</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">////while (*arr2!=&#x27;\0&#x27;)</span></span><br><span class="line"><span class="comment">////&#123;</span></span><br><span class="line"><span class="comment">////*arr1 = *arr2;</span></span><br><span class="line"><span class="comment">////arr1++;</span></span><br><span class="line"><span class="comment">////arr2++;</span></span><br><span class="line"><span class="comment">////&#125;</span></span><br><span class="line"><span class="comment">////*arr1 = *arr2;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////while (*arr2 != &#x27;\0&#x27;)   //优化1</span></span><br><span class="line"><span class="comment">////&#123;</span></span><br><span class="line"><span class="comment">////*arr1++ = *arr2++;                   </span></span><br><span class="line"><span class="comment">////&#125;</span></span><br><span class="line"><span class="comment">////*arr1 = *arr2;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//while (*arr1++ = *arr2++)    //优化2</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//;                        //思路：不断赋值，当*arr2是\0的时候，while（）括号里面就是0（\0的ASCLL码值是0），循环就停止</span></span><br><span class="line"><span class="comment">//&#125;                             //这里的代码有问题，还不完美，还能优化</span></span><br><span class="line"><span class="comment">//                                //arr1传过来的是空指针，那程序就会坏掉.</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//&#125;                              </span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char arr1[20] = &#123; 0 &#125;;</span></span><br><span class="line"><span class="comment">//char arr2[] = &quot;hello&quot;;</span></span><br><span class="line"><span class="comment">//my_strcpy(arr1, arr2);</span></span><br><span class="line"><span class="comment">//   //my_strcpy(arr1,NULL);</span></span><br><span class="line"><span class="comment">//printf(&quot;%s&quot;, arr1);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F; const int num &#x3D; 10;       const修饰了num，那么就不能直接用num &#x3D; 20；来修改变量<br>&#x2F;&#x2F; int <em>p &#x3D; &amp;num;           但是！可以把num交给指针，指针可以修改  &#x2F;&#x2F;如果想指针也不能改，在指针前面也加上const就行了<br>&#x2F;&#x2F; <em>p &#x3D; 20;<br>&#x2F;&#x2F; const修饰指针变量的时候<br>&#x2F;&#x2F; const如果放在</em>的左边，修饰的是</em>p，表示指针指向的内容是不能通过指针来改变的<br>&#x2F;&#x2F;    但是指针变量本身是可以修改的<br>&#x2F;&#x2F;<br>&#x2F;&#x2F; 当const放在*左边<br>&#x2F;&#x2F; 例如<br>&#x2F;&#x2F;const int num &#x3D; 0;<br>&#x2F;&#x2F;const int *p &#x3D; &amp;num;<br>&#x2F;&#x2F;int n &#x3D; 0;<br>&#x2F;&#x2F;<em>p &#x3D; 20;         &#x2F;&#x2F;<em>p不可以改<br>&#x2F;&#x2F;p &#x3D; &amp;n;         &#x2F;&#x2F;p可以改<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;当const放在</em>的右边<br>&#x2F;&#x2F;例如：<br>&#x2F;&#x2F;const int num &#x3D; 0；<br>&#x2F;&#x2F;int</em> const p &#x3D; &amp;num;<br>&#x2F;&#x2F;int n &#x3D; 0；<br>&#x2F;&#x2F;*p &#x3D; 20;         &#x2F;&#x2F;*p可以改<br>&#x2F;&#x2F;p &#x3D; &amp;n;        &#x2F;&#x2F;p不可以改<br>&#x2F;&#x2F;  </p><p>&#x2F;&#x2F;作业：模拟实现库函数 strlen</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//size_t my_strlen(const char* arr)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">////size_t的意思是无符号整数</span></span><br><span class="line"><span class="comment">////这里写int也可以，因为不可能算出负数</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//int cont = 0;</span></span><br><span class="line"><span class="comment">//assert( arr != &#x27;\0&#x27;);//也可以写成 assert(arr);  </span></span><br><span class="line"><span class="comment">//while (*arr != &#x27;\0&#x27;)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//*arr++;</span></span><br><span class="line"><span class="comment">//cont++;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return cont;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char arr[] = &quot;abcdefg&quot;;</span></span><br><span class="line"><span class="comment">//int ret = my_strlen(arr);             //字符串长度，&quot;\0&quot;不算</span></span><br><span class="line"><span class="comment">//printf(&quot;%d\n&quot;, ret);           </span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, sizeof(arr));   //元素个数，&quot;\0&quot;也算1个</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="———————————————————————————–作业讲解———————————————————————————–"><a href="#———————————————————————————–作业讲解———————————————————————————–" class="headerlink" title="———————————————————————————–作业讲解———————————————————————————–"></a>———————————————————————————–作业讲解———————————————————————————–</h1><p>&#x2F;&#x2F;作业：求两个数二进制中不同的个数（两个int（32位）整数m和n的二进制表达中，有多少个位（bit）不同？）<br>&#x2F;&#x2F;例子：输入 1999  2299  输出7</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int m = 0;</span></span><br><span class="line"><span class="comment">//int n = 0;</span></span><br><span class="line"><span class="comment">//int cont = 0;</span></span><br><span class="line"><span class="comment">//int i = 0;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</span></span><br><span class="line"><span class="comment">//for (i = 0; i &lt; 32; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if ( ( (n &gt;&gt; i) &amp; 1 ) != ( ( (m &gt;&gt; i) &amp; 1 ) ) )     //按位与</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cont++;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, cont);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;优化：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int m = 0;</span></span><br><span class="line"><span class="comment">//int n = 0;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d%d&quot;, &amp;n, &amp;m);</span></span><br><span class="line"><span class="comment">//int ret = m ^ n;            //异或：32位二进制比较，相同为0，不同为1.</span></span><br><span class="line"><span class="comment">////然后统计一下ret二进制中有几个1，就说明m和n中有几个二进制位不同</span></span><br><span class="line"><span class="comment">//int cont = Numberof1(ret);</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, cont);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：计算参数n的二进制补码中有几个一 Numberof1</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int Numberof1(int n)    //可以加上无符号整形代码就对了（unsigned int ）</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int cont = 0;</span></span><br><span class="line"><span class="comment">//while (n)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (n % 2 == 1)                      //这样写正数可以，负数就不对了</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cont++;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//n = n / 2;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return cont;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int n = 10;</span></span><br><span class="line"><span class="comment">//int ret = Numberof1(n);</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, ret);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int Numberof1(int n)    //在不用无符号整形的时候怎么办</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int cont = 0;</span></span><br><span class="line"><span class="comment">//int i = 0;</span></span><br><span class="line"><span class="comment">//for (i = 0; i &lt;32; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (((n &gt;&gt; i) &amp; 1) == 1)         //n的二进制右移，并逻辑与（&amp;）上1，如果等于1就说明是1，cont++;</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cont++;                        </span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return cont;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int n = 10;</span></span><br><span class="line"><span class="comment">//int ret = Numberof1(n);</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, ret);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;优化：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int Numberof1(int n)   </span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int cont = 0;</span></span><br><span class="line"><span class="comment">//while (n)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//n = n &amp; (n - 1);       //这里是按位与（&amp;）  //原理</span></span><br><span class="line"><span class="comment">//cont++;                                    //       00001010    ==  n</span></span><br><span class="line"><span class="comment">//&#125;//      00001001   ==n-1</span></span><br><span class="line"><span class="comment">//                                               //       00001000    == n &amp; (n-1)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// return cont;                                   //       00001000   == n</span></span><br><span class="line"><span class="comment">//                                               //       00000111  == n-1</span></span><br><span class="line"><span class="comment">//&#125;                                                   //      00000000    == n &amp; (n-1)</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int n = 10;</span></span><br><span class="line"><span class="comment">//int ret = Numberof1(n);</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, ret);                  </span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：写一个代码判断一个数字是不是2的n次方</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//n &amp; （n-1）== 0;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：打印一个数（n）二进制的奇数位和偶数位（获取一个整数二进制中所有的偶数位和奇数位，分别打印出二进制序列）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int n = 0;</span></span><br><span class="line"><span class="comment">//int i;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;, &amp;n);</span></span><br><span class="line"><span class="comment">////打印偶数位</span></span><br><span class="line"><span class="comment">//for (i = 31; i &gt;= 1; i-=2)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d &quot;, ((n &gt;&gt; i) &amp; 1));</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;\n&quot;);</span></span><br><span class="line"><span class="comment">////打印奇数位</span></span><br><span class="line"><span class="comment">//for (i = 30; i &gt;= 0; i -= 2)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d &quot;, ((n &gt;&gt; i) &amp; 1));</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：交换两个变量（不创建临时变量）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 10;</span></span><br><span class="line"><span class="comment">//int b = 20;</span></span><br><span class="line"><span class="comment">//a = a ^ b;</span></span><br><span class="line"><span class="comment">//b = a ^ b;</span></span><br><span class="line"><span class="comment">//a = a ^ b;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d %d&quot;, a, b);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：找出两个数的最大公倍数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//int b = 0;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d%d&quot;, &amp;a, &amp;b);</span></span><br><span class="line"><span class="comment">//int max = a &gt; b ? a : b; </span></span><br><span class="line"><span class="comment">//while (1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (max % a == 0 &amp;&amp; max % b == 0)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, max);</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//max++;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//优化：</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//int b = 0;</span></span><br><span class="line"><span class="comment">//int i;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d%d&quot;, &amp;a, &amp;b);</span></span><br><span class="line"><span class="comment">//for (i = 1;; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if ((a * i) % b == 0)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, a * i);</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;在优化：辗转相除法</p><p>&#x2F;&#x2F;作业：将一句话的单词进行倒置，标点不倒置，比如 i like beijing. 经过倒置后变成 beijing.like i<br>&#x2F;&#x2F;三步翻转法<br>&#x2F;&#x2F;1.字符串整体翻转 .gnijieb ekil i<br>&#x2F;&#x2F;2.每个单词逆序   beijing. like i</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">//void reverse(char* left,char *right)    //字符串逆序</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//while (left &lt; right) </span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char tmp = *left;</span></span><br><span class="line"><span class="comment">//*left = *right;</span></span><br><span class="line"><span class="comment">//*right = tmp;</span></span><br><span class="line"><span class="comment">//left++;</span></span><br><span class="line"><span class="comment">//right--;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char arr[100] = &#123; 0 &#125;;</span></span><br><span class="line"><span class="comment">//gets(arr);                 //把输入的内容放到arr这个数组中</span></span><br><span class="line"><span class="comment">//int len = strlen(arr);</span></span><br><span class="line"><span class="comment">//reverse(arr,arr+len-1);</span></span><br><span class="line"><span class="comment">//char* start = arr;</span></span><br><span class="line"><span class="comment">//while (*start)              //当*start是&#x27;\0&#x27;的时候循环就停下</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char* end = start;      </span></span><br><span class="line"><span class="comment">//while (*end!= &#x27; &#x27;&amp;&amp;*end!=&#x27;\0&#x27;)    </span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//end++;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//reverse(start, end-1);</span></span><br><span class="line"><span class="comment">//if (*end == &#x27; &#x27;)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//start = end+1;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//start = end;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//printf(&quot;%s&quot;, arr);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识c语言</title>
      <link href="/2022/04/28/%E5%88%9D%E8%AF%86c%E8%AF%AD%E8%A8%80/"/>
      <url>/2022/04/28/%E5%88%9D%E8%AF%86c%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<h1 id="初识c语言"><a href="#初识c语言" class="headerlink" title="初识c语言"></a>初识c语言</h1><h1 id="————————————————–hello-word———————————"><a href="#————————————————–hello-word———————————" class="headerlink" title="————————————————–hello word———————————-"></a>————————————————–hello word———————————-</h1><p>&#x2F;&#x2F; 1.创建一个项目<br>&#x2F;&#x2F; 2.创建一个源文件（.c）<br>&#x2F;&#x2F; 3.写代码<br>&#x2F;&#x2F; 4.编译代码+运行<br>&#x2F;&#x2F; 写代码   &#x2F;&#x2F;注意在写代码过程中一定要用英文输入法，中文的没法读.每段代码结束后面加上；<br>&#x2F;&#x2F; 1.写出主函数（main函数）<br>&#x2F;&#x2F; c语言是从主函数的第一行开始执行<br>&#x2F;&#x2F; int&#x3D;返回类型 &#x2F;&#x2F;返回一个值<br>&#x2F;&#x2F; printf  &#x2F;&#x2F;输出  &#x2F;&#x2F;库函数 在屏幕上打印信息<br>&#x2F;&#x2F; stdio.h  &#x2F;&#x2F;引用头文件<br>&#x2F;&#x2F; include &#x2F;&#x2F;包含头文件的意思<br>&#x2F;&#x2F; getchar();CMD不闪退<br>&#x2F;&#x2F; **\n  n的意思是分行<br>&#x2F;&#x2F; 一个.c文件只能有一个main（）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// #include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">//  int main()</span></span><br><span class="line"><span class="comment">//  &#123;</span></span><br><span class="line"><span class="comment">//     printf(&quot;hello word\n&quot;);</span></span><br><span class="line"><span class="comment">//     getchar ();</span></span><br><span class="line"><span class="comment">//     return 0;</span></span><br><span class="line"><span class="comment">//  &#125;</span></span><br></pre></td></tr></table></figure><h1 id="———————————————–字符数据类型—————————————–"><a href="#———————————————–字符数据类型—————————————–" class="headerlink" title="———————————————–字符数据类型—————————————–"></a>———————————————–字符数据类型—————————————–</h1><p>&#x2F;&#x2F; char  &#x2F;&#x2F;字符数据类型<br>&#x2F;&#x2F; short    &#x2F;&#x2F;短整型<br>&#x2F;&#x2F; int   &#x2F;&#x2F;整形<br>&#x2F;&#x2F; long   &#x2F;&#x2F;长整形<br>&#x2F;&#x2F; longlong   &#x2F;&#x2F;长长整形<br>&#x2F;&#x2F; float    &#x2F;&#x2F;单精度浮点数<br>&#x2F;&#x2F; double   &#x2F;&#x2F;双精度浮点数<br>&#x2F;&#x2F; sizeof   &#x2F;&#x2F;关键字-操作符-计算机类型或变量所占空间的大小 &#x2F;&#x2F;单位是字节（byte）<br>&#x2F;&#x2F; c语言规定sizeof（long）只要大于等于sizeof（int）就可以，不需要大于.<br>&#x2F;&#x2F; 计算机单位：计算机最小单位bit-比特位<br>&#x2F;&#x2F; byte字节 1byte&#x3D;8bit &#x2F;&#x2F;kb&#x3D;1024byte  &#x2F;&#x2F;mb&#x3D;1024kb  &#x2F;&#x2F;gb&#x3D;1024mb  &#x2F;&#x2F;tb&#x3D;1024gb &#x2F;&#x2F;pb&#x3D;1024tb<br>&#x2F;&#x2F; 8进制0-7  &#x2F;&#x2F;10进制0-9</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//   #include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">//  int main()</span></span><br><span class="line"><span class="comment">//  &#123;</span></span><br><span class="line"><span class="comment">//    printf(&quot;%d\n&quot;,100);//%d是打印一个整数</span></span><br><span class="line"><span class="comment">//       return 0;</span></span><br><span class="line"><span class="comment">//  &#125;</span></span><br></pre></td></tr></table></figure><h1 id="————————————————-初始长量变量———————————————–"><a href="#————————————————-初始长量变量———————————————–" class="headerlink" title="————————————————-初始长量变量———————————————–"></a>————————————————-初始长量变量———————————————–</h1><p>&#x2F;&#x2F; 定义变量的方法</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//   #include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">//   int main()</span></span><br><span class="line"><span class="comment">//    &#123;</span></span><br><span class="line"><span class="comment">//   int age = 150;   //age是自己随便取的名字 //创建一个变量</span></span><br><span class="line"><span class="comment">//   double weight = 75.3;  //weight是体重的意思</span></span><br><span class="line"><span class="comment">//   age = age + 1;   //变量可变</span></span><br><span class="line"><span class="comment">//   printf(&quot;%lf\n&quot;,weight);  //打印体重  //%lf是浮点数用%lf  //整数用%d,小数用%lf</span></span><br><span class="line"><span class="comment">//   printf(&quot;%d\n&quot;,age);</span></span><br><span class="line"><span class="comment">//   return 0;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><h1 id="——————————————变量的分类——————————————"><a href="#——————————————变量的分类——————————————" class="headerlink" title="——————————————变量的分类——————————————-"></a>——————————————变量的分类——————————————-</h1><p>&#x2F;&#x2F; 局部变量  全局变量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// #include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">// int main()</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//    int a = 10;</span></span><br><span class="line"><span class="comment">//    return 0;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F; 在大括号({})里面的叫局部变量,在大括号外面的叫全局变量<br>&#x2F;&#x2F; 当局部变量和全局变量冲突的时候（比如局部a&#x3D;10，全局a&#x3D;100）那么是局部变量优先 ps：不建议全局变量和局部变量用同一个字符</p><h1 id="———————————————-求和————————————————"><a href="#———————————————-求和————————————————" class="headerlink" title="———————————————-求和————————————————"></a>———————————————-求和————————————————</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  #include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">//  int main()</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     int a = 0;</span></span><br><span class="line"><span class="comment">//     int b = 0;   </span></span><br><span class="line"><span class="comment">//     int sum = 0;</span></span><br><span class="line"><span class="comment">//   scanf (&quot;%d %d&quot;,&amp;a,&amp;b);  //scanf是输入函数  //%d之间要有空格 //只是对数据做一个存放</span></span><br><span class="line"><span class="comment">//   sum = a + b;    //sum=和</span></span><br><span class="line"><span class="comment">//   printf(&quot;sum = %d\n&quot;, sum);   //sum=%d表示的是sum的和是一个整数 后面的sum是要输出的值</span></span><br><span class="line"><span class="comment">//   getchar ();</span></span><br><span class="line"><span class="comment">//   return 0;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F; 以上直接编译会报错，因为用了scanf<br>&#x2F;&#x2F; VScode2022可能不会报错，如果报错还一定要用的话，在整个程序第一行，一定要第一行输入#define _CRT_SECURE_NO_WARNINGS 1；</p><h1 id="—————————————-变量的作用域和声明周期————————————————–"><a href="#—————————————-变量的作用域和声明周期————————————————–" class="headerlink" title="—————————————-变量的作用域和声明周期————————————————–"></a>—————————————-变量的作用域和声明周期————————————————–</h1><p>&#x2F;&#x2F;作用域：哪里起作用哪里就是作用域.<br>&#x2F;&#x2F;局部变量的作用域；就是局部变量所在的范围，{}包起来的就是局部变量的范围<br>&#x2F;&#x2F;全局变量的作用域：整个工程</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">//int a = 10;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//    printf(&quot;1:%d\n&quot;, a);</span></span><br><span class="line"><span class="comment">//    printf(&quot;hehe\n&quot;);</span></span><br><span class="line"><span class="comment">//    &#123;</span></span><br><span class="line"><span class="comment">//        int b = 5;</span></span><br><span class="line"><span class="comment">//        printf(&quot;2:%d\n&quot;, a);</span></span><br><span class="line"><span class="comment">//        printf(&quot;3:%d\n&quot;, b);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//    printf(&quot;4:%d\n&quot;, a);</span></span><br><span class="line"><span class="comment">//    return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;extern 声明函数在另一个.c文件中指明目前.c文件的全局变量，就可以在另一个.c文件中使用.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">//extern int d;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d\n&quot;, d);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="————————————————变量生命周期————————————————–"><a href="#————————————————变量生命周期————————————————–" class="headerlink" title="————————————————变量生命周期————————————————–"></a>————————————————变量生命周期————————————————–</h1><p>&#x2F;&#x2F;局部变量的生命周期：进入局部范围开始出局部范围生命结束<br>&#x2F;&#x2F;全局变量的生命周期：程序的生命周期（main函数开始到结束）<br>#————————————————常量——————————————————-<br>&#x2F;&#x2F;1.字面常量<br>&#x2F;&#x2F;不会变的常量，可以是一个数字比如1,2,3,可以是一个字符一个字符串比如”a”,”b”，”bc,”hjahf”<br>&#x2F;&#x2F;2.const修饰的常变量<br>&#x2F;&#x2F;在变量前面加上const变量就不会变.见下文<br>&#x2F;&#x2F;常变量还是变量，数组里不能用变量.<br>&#x2F;&#x2F;常变量属于变量，不是常量. </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// #include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">// int main()</span></span><br><span class="line"><span class="comment">// &#123; </span></span><br><span class="line"><span class="comment">//    const int a = 10；   //常变量</span></span><br><span class="line"><span class="comment">//    a = 20;              </span></span><br><span class="line"><span class="comment">//    printf(&quot;%d\n&quot;, a);   //加上了constd在输入a = 20 运行就会报错</span></span><br><span class="line"><span class="comment">//    return 0;</span></span><br><span class="line"><span class="comment">//  &#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;就算加上了const变量还是变量，不会变成常量</p><p>&#x2F;&#x2F;3.#define定义的标识符常量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">//#define MAX 10000     //此时MAX是一个标识符常量，不可以被 MAX = ***；更改为其他数</span></span><br><span class="line"><span class="comment">// MAX = 20000         //上面加上#define后， MAX的数不可以被更改</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;4.枚举常量（enum）<br>&#x2F;&#x2F;可以被一一列举的常量.枚举常量从0开始.<br>&#x2F;&#x2F;枚举常量的格式:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//enum Sex       //sex是性别的意思</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">// MALE            //可以在&#123;&#125;里面加上值，比如MALE = 2,这种值叫赋初值.只能在&#123;&#125;里面赋初值，不能在&#123;&#125;外面赋初值.</span></span><br><span class="line"><span class="comment">// FEMALE         //这三个英文是男，女，保密，的意思</span></span><br><span class="line"><span class="comment">// SECRET</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// enum Sex s = ***     //***只能是上面三个英文其中一个</span></span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure><h1 id="—————————————————-初识字符串———————————————"><a href="#—————————————————-初识字符串———————————————" class="headerlink" title="—————————————————-初识字符串———————————————-"></a>—————————————————-初识字符串———————————————-</h1><p>&#x2F;&#x2F;1.字符<br>&#x2F;&#x2F;被””包起来的就是字符<br>&#x2F;&#x2F;2.字符数组<br>&#x2F;&#x2F;是一组相同类型的元素<br>&#x2F;&#x2F;每个字符串在结尾的位置隐藏了一个\0的字符，\0是字符串结束标志.<br>&#x2F;&#x2F;比如”hello”,是由 h、e、l、l、o、\0六个元素组成.<br>&#x2F;&#x2F;char arr[] &#x3D; “hello”      &#x2F;&#x2F;char是字符串类型 arr[]是创建数组<br>&#x2F;&#x2F;char arr1[] &#x3D; “abc”<br>&#x2F;&#x2F;char arr2[] &#x3D; {’a’，’b’，’c’}        &#x2F;&#x2F;可以在添加一个\0作为结束<br>&#x2F;&#x2F;%s是引用char类型的意思<br>&#x2F;&#x2F;printf（”%s\n”, arr1);    输出为abc<br>&#x2F;&#x2F;printf（”%s\n”, arr2);    输出为abc烫烫烫bc   &#x2F;&#x2F;烫烫烫bc是乱码    &#x2F;&#x2F;加上\0结果为abc不加上则为乱码<br>&#x2F;&#x2F;int len &#x3D; strlen（”***”）&#x2F;&#x2F;strlen全名是string length是求字符串长度的意思，len是自己给的名字<br>&#x2F;&#x2F; printf(“%d\n”, len);        &#x2F;&#x2F;结果为3<br>&#x2F;&#x2F; 在计算字符串长度的时候\0是不计算在长度里的.<br>&#x2F;&#x2F;提示报错strlen未定义，因为没有引用头文件#include &lt;string.h&gt;,头文件可以多个引用.<br>&#x2F;&#x2F;如果没在数组后加上\0,在计算数组长度的时候会是一个随机值.<br>&#x2F;&#x2F;监视窗口打开方法：F10-调试-窗口-监视</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">//#include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char arr[] = &quot;abc&quot;;</span></span><br><span class="line"><span class="comment">//printf(&quot;%s\n&quot;, arr);</span></span><br><span class="line"><span class="comment">//int bl = strlen(&quot;arr&quot;);</span></span><br><span class="line"><span class="comment">//printf(&quot;%d\n&quot;, bl);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="————————————————-初识转义字符———————————————"><a href="#————————————————-初识转义字符———————————————" class="headerlink" title="————————————————-初识转义字符———————————————-"></a>————————————————-初识转义字符———————————————-</h1><p>&#x2F;&#x2F;在想输出三字母词的时候会被变成别的，比如想输出??),会变成],想输出\n的时候会变成换行.<br>&#x2F;&#x2F;vs2022已经不支持三字母了<br>&#x2F;&#x2F;%c是打印字符<br>&#x2F;&#x2F;转移字符就是\加上某字母有特殊效果，比如\n是换行的意思</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;%c\n&quot;, &#x27;\&#x27;&#x27;);   //如果想输出一个逗号，直接用逗号包起来不行，要加上一个反斜杠，这就是转义字符</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;%c\n&quot;, &#x27;a&#x27;);        //%c打印字符，字符用英文单引号包起来</span></span><br><span class="line"><span class="comment">//printf(&quot;%d\n&quot;, 100);       //%d打印整形，整形不用包起来直接用</span></span><br><span class="line"><span class="comment">//printf(&quot;%s\n&quot;, &quot;abc&quot;);     //%s打印字符串，字符串用英文双引号 </span></span><br><span class="line"><span class="comment">//printf(&quot;%lf\n&quot;, 3.1415);    //$lf打印浮点数，浮点数不用包起来直接用</span></span><br><span class="line"><span class="comment">//  printf(&quot;%p\n&quot;, a);          //%p用来打印地址</span></span><br><span class="line"><span class="comment">//printf(&quot;%s\n&quot;, &quot;b&quot;);        //如果用%s打印字符，要用双引号包起来</span></span><br><span class="line"><span class="comment">//printf(&quot;%s\n&quot;, &quot;\\t&quot;);     //想输出\t \n 之类的，在前面加上\就好了</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;ASCII码值：详情百度.<br>&#x2F;&#x2F; \ddd:ddd是自己取的3个数字，数字必须是8进制的<br>&#x2F;&#x2F; \xdd:dd是自己取的2个数字，数字必须是16进制的<br>&#x2F;&#x2F;8进制转换：从最右边开始，第一个数乘以8的0次方，第二个数乘以8的二次方，以此类推<br>&#x2F;&#x2F; 例：130是8进制     等于1乘8的2次方+3乘8的1次方+0乘8的0次方<br>&#x2F;&#x2F;10进制转换：从最右边开始，第一个数乘以10的0次方，第二个数乘以10的1次方，以此类推<br>&#x2F;&#x2F;printf（”%c\n”, ’\130’）   &#x2F;&#x2F;输出结果是X. &#x2F;&#x2F;用%d会输出8进制数88，用%c会输出X<br>&#x2F;&#x2F; \130中130表示的的8进制数，加上\后，会把130从8进制转换成10进制数，在把10进制数转换成对应的ASCII码值<br>&#x2F;&#x2F; 因为\130从8进制转换成10进制数是88，而88对应的10进制ASCII码值是X，所以最后输出的结果是X   &#x2F;&#x2F;ASCII码值对应值请百度</p><h1 id="—————————————————初识选择语句—————————————————"><a href="#—————————————————初识选择语句—————————————————" class="headerlink" title="—————————————————初识选择语句—————————————————-"></a>—————————————————初识选择语句—————————————————-</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int input = 0;   //输入的值,ibput是输入的意思，可以自己取名字</span></span><br><span class="line"><span class="comment">//printf(&quot;加入比特:&gt;\n&quot;);</span></span><br><span class="line"><span class="comment">//printf(&quot;那要好好学习吗(1/0)?:&gt;\n&quot;);</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;, &amp;input);        //scanf是放一个可以输入的空间</span></span><br><span class="line"><span class="comment">//if (input == 1)</span></span><br><span class="line"><span class="comment">//printf(&quot;好offer\n&quot;);</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//printf(&quot;卖红薯\n&quot;);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="—————————————————初识循环语句———————————————–"><a href="#—————————————————初识循环语句———————————————–" class="headerlink" title="—————————————————初识循环语句———————————————–"></a>—————————————————初识循环语句———————————————–</h1><p>&#x2F;&#x2F;1.while循环</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 0;  //line自定义</span></span><br><span class="line"><span class="comment">//while(a&lt;1145)    //while是循环   //while后面不能有分号！！！</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;写代码:%d\n&quot;, a);      </span></span><br><span class="line"><span class="comment">//a++; </span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//if (a == 1145)         //if后面不能有分号</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;好offer\n&quot;);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="—————————————————-函数———————————————————"><a href="#—————————————————-函数———————————————————" class="headerlink" title="—————————————————-函数———————————————————"></a>—————————————————-函数———————————————————</h1><p>&#x2F;&#x2F;什么是函数，y&#x3D;kx+b就是函数也可以写成f(x)&#x3D;kx+b</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int Add(int axy, int bxy)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int d = 0;</span></span><br><span class="line"><span class="comment">//d = axy + bxy;                        //用函数做加法</span></span><br><span class="line"><span class="comment">//return d;                               //先创建2个可以输入值的地方（scanf），别忘记加上&amp;</span></span><br><span class="line"><span class="comment">//&#125;                                         //在加上函数，Add就是创建的函数，只是创建了一个函数，该函数还不知道干什么</span></span><br><span class="line"><span class="comment">//int main()                             //对函数做定义&#123;int Add（）&#125;，就是这个函数该干什么</span></span><br><span class="line"><span class="comment">//&#123;                                       //最后returm d；输出函数的值</span></span><br><span class="line"><span class="comment">//int a = 0;                           //要打印出来函数值，先给他赋值，int c = Add（a，b）；</span></span><br><span class="line"><span class="comment">//int b = 0;                          </span></span><br><span class="line"><span class="comment">//scanf(&quot;%d%d&quot;, &amp;a, &amp;b);</span></span><br><span class="line"><span class="comment">//int c = Add(a, b);</span></span><br><span class="line"><span class="comment">//printf(&quot;%d\n&quot;, c);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="—————————————————-数组——————————————————–"><a href="#—————————————————-数组——————————————————–" class="headerlink" title="—————————————————-数组——————————————————–"></a>—————————————————-数组——————————————————–</h1><p>&#x2F;&#x2F;数组-一种相同类型的元素集合<br>&#x2F;&#x2F;char ch[5] &#x3D; {‘a’,’b’,’c’};   &#x2F;&#x2F;给了5个元素的位置，但是只放了三个，这种没放满的叫不完全初始化，剩余的默认为0</p><h1 id="——————————————————操作符——————————————————–"><a href="#——————————————————操作符——————————————————–" class="headerlink" title="——————————————————操作符——————————————————–"></a>——————————————————操作符——————————————————–</h1><p>&#x2F;&#x2F;1.算数操作符：+ - * &#x2F; %    &#x2F;&#x2F;%是取模（余） &#x2F;&#x2F;什么是余？ &#x2F;&#x2F;比如9&#x2F;2，那么2乘4等于8,9-8&#x3D;1，这个1就是余数<br>&#x2F;&#x2F; int a &#x3D; 9&#x2F;2          &#x2F;&#x2F;输出结果是4<br>&#x2F;&#x2F; float a &#x3D; 9&#x2F;2         &#x2F;&#x2F;输出结果还是4   &#x2F;&#x2F;flota是单精度浮点数<br>&#x2F;&#x2F; 如果9&#x2F;2，9和2都是整数那么得到的结果都是整数，只要其中一个加上小数点就是4.5. 比如9&#x2F;2.0、9.0&#x2F;2、9.0&#x2F;2.0.<br>&#x2F;&#x2F;2.移位操作符：&gt;&gt;   &lt;&lt;<br>&#x2F;&#x2F; int a &#x3D; 2;<br>&#x2F;&#x2F; int b &#x3D;a &lt;&lt; 1；<br>&#x2F;&#x2F;列出二进制的32位操作符，00000000000000000000000000000000,32个0别数了.<br>&#x2F;&#x2F;比如说现在数值是2那么， 00000000000000000000000000000010.<br>&#x2F;&#x2F;那么b就等于            00000000000000000000000000000010 . &#x2F;&#x2F;最后这个空格会被0补上<br>&#x2F;&#x2F;所以b最后等于           00000000000000000000000000000100. &#x2F;&#x2F;b输出结果为4<br>&#x2F;&#x2F;3.赋值操作符：&#x3D; , +&#x3D; , -&#x3D; , *&#x3D; , &#x2F;&#x3D; , &amp;&#x3D; , ^&#x3D; , |&#x3D; , &gt;&gt;&#x3D; , &lt;&lt;&#x3D;,<br>&#x2F;&#x2F;解释:           加   减   乘   除   与   或   非   左移  右移<br>&#x2F;&#x2F;赋值操作符怎么用，比如a &#x3D; a-3可以写成 a -&#x3D; 3,  a &#x3D; a &lt;&lt; 1写成 a &lt;&lt;&#x3D; 3.<br>&#x2F;&#x2F;4.双目操作符<br>&#x2F;&#x2F; 有两个操作数，比如a+b，a和b是两个操作数，<br>&#x2F;&#x2F; 单目操作符<br>&#x2F;&#x2F; 1.！逻辑操作符 ：把假变成真，真变成假。c语言中0代表假，非0为真<br>&#x2F;&#x2F; int a &#x3D; 0；<br>&#x2F;&#x2F; printf（”%d\n”, !a）;   &#x2F;&#x2F;结果为 1    &#x2F;&#x2F;0代表假，!a把假变为真，真就输出1（c语言规定）<br>&#x2F;&#x2F; int a &#x3D; 1；<br>&#x2F;&#x2F; printf（”%d\n”, !a）;  &#x2F;&#x2F;结果为 0    &#x2F;&#x2F;1代表真，!a把真变为假 ，假就输出0<br>&#x2F;&#x2F; 2.-<br>&#x2F;&#x2F; 负值<br>&#x2F;&#x2F; 3.+<br>&#x2F;&#x2F; 正值<br>&#x2F;&#x2F; 4.&amp;<br>&#x2F;&#x2F; 取地址<br>&#x2F;&#x2F; 5.sizeof<br>&#x2F;&#x2F; 操作数的类型长度（单位&#x2F;字节）1字节&#x3D;8比特   整形占用4字节<br>&#x2F;&#x2F; sizeof计算的是字节，所以在计算数组的时候，数组中一个数字（整形）占用4字节<br>&#x2F;&#x2F; 6.~<br>&#x2F;&#x2F; 按位取反<br>&#x2F;&#x2F; 原码取反得到反码，反码+1得到补码（反之亦然）<br>&#x2F;&#x2F; 整数在内存中存的是补码（最后输出的是原码）<br>&#x2F;&#x2F; 1的原码   00000000000000000000000000000001<br>&#x2F;&#x2F; 原码      00000000000000000000000000000001<br>&#x2F;&#x2F; 反码      00000000000000000000000000000001<br>&#x2F;&#x2F; 补码      00000000000000000000000000000001<br>&#x2F;&#x2F; 补码      11111111111111111111111111111110  &#x2F;&#x2F;<del>a<br>&#x2F;&#x2F; 反码      11111111111111111111111111111101  &#x2F;&#x2F;补码-1<br>&#x2F;&#x2F; 原码      10000000000000000000000000000010  &#x2F;&#x2F;原码输出 -2<br>&#x2F;&#x2F; 正整数的原反补一样（规定）<br>&#x2F;&#x2F; -1的原码  10000000000000000000000000000001 （第一个1代表符号位）<br>&#x2F;&#x2F;原码       10000000000000000000000000000001    &#x2F;&#x2F;在负数求反码的时候，第一个符号位不变<br>&#x2F;&#x2F;反码       11111111111111111111111111111110     &#x2F;&#x2F;反码+1得到补码<br>&#x2F;&#x2F;补码       11111111111111111111111111111111<br>&#x2F;&#x2F;</del>a         00000000000000000000000000000000<br>&#x2F;&#x2F; 反码      10000000000000000000000000000001<br>&#x2F;&#x2F; 原码      11111111111111111111111111111110<br>&#x2F;&#x2F; ！！！！！-1的取反暂时没懂！！！！！<br>&#x2F;&#x2F;负数的第一个值叫符号位，负数的符号位为1</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d\n&quot;, ~a);  //结果为0   </span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;7.++ –<br>&#x2F;&#x2F;前置++<br>&#x2F;&#x2F;例：++a     先加在用<br>&#x2F;&#x2F;后置++<br>&#x2F;&#x2F;例：a++     先用在加<br>&#x2F;&#x2F;–一样<br>&#x2F;&#x2F;8.*<br>&#x2F;&#x2F;间接访问操作符（解引用操作符）<br>&#x2F;&#x2F;9.（类型）<br>&#x2F;&#x2F;例 int a &#x3D; 3.14<br>&#x2F;&#x2F;   printf（”%d\n”, a）;<br>&#x2F;&#x2F;这样输出会报警 ，从浮点数到整形会丢失数据<br>&#x2F;&#x2F;这时在前面加上 int a &#x3D; 3.14<br>&#x2F;&#x2F;                printf（”%d\n”, (int)a);<br>&#x2F;&#x2F;这样就不会报警<br>&#x2F;&#x2F;10.     11.   12.     13.        14.    15.<br>&#x2F;&#x2F;&gt;,     &lt;,    &lt;&#x3D;,       &gt;&#x3D;，      !&#x3D;,    &#x3D;&#x3D;,<br>&#x2F;&#x2F;大于，小于，小于等于，大于等于，不等于，等于<br>&#x2F;&#x2F;16.逻辑与：&amp;&amp;<br>&#x2F;&#x2F;17.逻辑或：||<br>&#x2F;&#x2F;逻辑与和逻辑或反应真假问题.就是{与（&amp;&amp;）}起来或者{或（||）}起来.是真就输出真（1），假就输出假（0）.<br>&#x2F;&#x2F;18.条件操作符，也叫三目操作符<br>&#x2F;&#x2F; exp1 ? exp2 : exp3<br>&#x2F;&#x2F;exp1成立，exp2计算 整个表达式的结果是：exp2的结果<br>&#x2F;&#x2F;exp1不成立，exp3计算 整个表达式的结果是:exp3的结果</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 1;</span></span><br><span class="line"><span class="comment">//int b = 2;</span></span><br><span class="line"><span class="comment">//int d = 0;</span></span><br><span class="line"><span class="comment">//if (a &gt; b)</span></span><br><span class="line"><span class="comment">//d = a;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//d = b;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//以上语句可以直接写成:d = a &gt; b ? a : b;</span></span><br><span class="line"><span class="comment">//19.逗号表达式</span></span><br><span class="line"><span class="comment">//逗号隔开的一串表达式</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 1;</span></span><br><span class="line"><span class="comment">//int b = 2;</span></span><br><span class="line"><span class="comment">//int c = 3;</span></span><br><span class="line"><span class="comment">//int d = (a = b + c, b = a + c, c = a + b);//计算顺序是，先算a=b+c，然后把算出来a的值代入b=a+c，最后吧计算后的a和b的值代入c.</span></span><br><span class="line"><span class="comment">//printf(&quot;%d\n&quot;, d);//输出13                 //逗号表达式是从左到右依次计算</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;20.下标引用，函数调用和结构成员<br>&#x2F;&#x2F;[],  (),  .,  -&gt;</p><h1 id="———————————————–初识常见关键字———————————————————"><a href="#———————————————–初识常见关键字———————————————————" class="headerlink" title="———————————————–初识常见关键字———————————————————"></a>———————————————–初识常见关键字———————————————————</h1><p>&#x2F;&#x2F;c语言提供的关键字<br>&#x2F;&#x2F;1.c语言提供的，不能自己创建关键字<br>&#x2F;&#x2F;2.变量名不能是关键字<br>&#x2F;&#x2F;auto–是自动的，每个局部变量都是auto修饰的<br>&#x2F;&#x2F; break–跳出变量<br>&#x2F;&#x2F; case–没讲（case语句的时候会讲）<br>&#x2F;&#x2F; char–字符类型<br>&#x2F;&#x2F; const–常变量<br>&#x2F;&#x2F; continue–继续<br>&#x2F;&#x2F; default–默认<br>&#x2F;&#x2F; do–dowhile循环<br>&#x2F;&#x2F; double–双精度浮点数<br>&#x2F;&#x2F; else–else语句（if那里出现的）<br>&#x2F;&#x2F; enum–枚举<br>&#x2F;&#x2F; extern–声明外部符号–声明变量<br>&#x2F;&#x2F; float–单精度浮点数<br>&#x2F;&#x2F; for–for循环<br>&#x2F;&#x2F; goto–goto语句<br>&#x2F;&#x2F; if–if语句<br>&#x2F;&#x2F; int–整形<br>&#x2F;&#x2F; long–长整形<br>&#x2F;&#x2F; register–寄存器关键字</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//register int a = 1;//作用是：建议a的值存放在寄存器中   ps：仅仅是建议，放不放不知道，编译器自己说了算</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;计算机中数据的存储<br>&#x2F;&#x2F;计算机中的数据可以存放到那些内容中去呢？<br>&#x2F;&#x2F; 内存，硬盘，网盘，高速缓存，寄存器<br>&#x2F;&#x2F; return–返回值<br>&#x2F;&#x2F; short–短整形<br>&#x2F;&#x2F; signed–有符号位的，描述的数字有符号的有正负的，和他相对应的有unsigned<br>&#x2F;&#x2F; unsigned–无符号的<br>&#x2F;&#x2F; sizeof–计算所占空间大小（单位&#x2F;字节）<br>&#x2F;&#x2F; static–静态的<br>&#x2F;&#x2F; struct–结构体<br>&#x2F;&#x2F; switch–switch结构语句<br>&#x2F;&#x2F; typedef–类型定义  也叫类型重命名，就是给特别长的关键字缩写<br>&#x2F;&#x2F; union–联合体（共用体）<br>&#x2F;&#x2F; void–无，没有，空的意思<br>&#x2F;&#x2F; volatile–体现c语言段位的意思，c语言暂时不讲<br>&#x2F;&#x2F; while–循环<br>&#x2F;&#x2F;<br>&#x2F;&#x2F;define–不是关键字是预处理指令<br>&#x2F;&#x2F;include–不是关键字是预处理指令</p><h1 id="——————————————————常见关键字——————————————"><a href="#——————————————————常见关键字——————————————" class="headerlink" title="——————————————————常见关键字——————————————-"></a>——————————————————常见关键字——————————————-</h1><p>&#x2F;&#x2F;typedef–类型定义  也叫类型重命名，就是给特别长的关键字缩写<br>&#x2F;&#x2F;typedef unsigned int u_int;    &#x2F;&#x2F;typedef就是给特别长的关键字一个缩写</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//unsigned int a = 0;   //unsigned是无符号的意思</span></span><br><span class="line"><span class="comment">//u_int a = 0;            //和上面那句话是一样的意思</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;static-静态的<br>&#x2F;&#x2F;1.static修饰局部变量<br>&#x2F;&#x2F;2.static修饰全局变量<br>&#x2F;&#x2F;3.static修饰函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//void sb()                                                         </span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//a++;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, a);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()                       //输出10个1</span></span><br><span class="line"><span class="comment">//&#123;                                 //循环10次，每次新建一个a，所以是10个1</span></span><br><span class="line"><span class="comment">//int i = 0;</span></span><br><span class="line"><span class="comment">//while (i &lt; 10)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//sb();</span></span><br><span class="line"><span class="comment">//i++;                         static修饰局部变量，改变了局部变量的生命周期（本质上是改变了变量的存储类型）</span></span><br><span class="line"><span class="comment">//&#125;                                静态局部变量，生命周期是全局的，作用域是局部的</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//void sb()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">// static int a = 0;</span></span><br><span class="line"><span class="comment">//a++;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;, a);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//int main()                       //输出1 2 3 4 5 6 7 8 9 10</span></span><br><span class="line"><span class="comment">//&#123;                                 //循环10次，每次不新建一个a，所以是1到10</span></span><br><span class="line"><span class="comment">//int i = 0;</span></span><br><span class="line"><span class="comment">//while (i &lt; 10)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//sb();</span></span><br><span class="line"><span class="comment">//i++;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;static修饰全局变量，会使这个全局变量只能在自己所在的源文件里使用<br>&#x2F;&#x2F;其他源文件不能用！！！<br>&#x2F;&#x2F;全局变量，在其他源文件可以使用，是因为全局变量具有外部链接属性<br>&#x2F;&#x2F;但是被static修饰之后，就变成了内部链接属性，其他源文件就链接不到这个静态的全局变量了<br>&#x2F;&#x2F;声明函数和声明全局变量一样，都是在extern后面跟名字<br>&#x2F;&#x2F;static修饰函数，使函数也只能在自己所在的源文件内部使用，和修饰全局变量一样</p><h1 id="—————————————————-定义常量和宏—————————————————"><a href="#—————————————————-定义常量和宏—————————————————" class="headerlink" title="—————————————————-定义常量和宏—————————————————"></a>—————————————————-定义常量和宏—————————————————</h1><p>&#x2F;&#x2F;define–预处理指令</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义常量：</span></span><br><span class="line"><span class="comment">//#define MAX 1000；             </span></span><br><span class="line"><span class="comment">//定义宏</span></span><br><span class="line"><span class="comment">//#define hanshu(x,y) x+y         //这就是定义宏</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;                                          //上面宏最后的xy没加括号</span></span><br><span class="line"><span class="comment">//printf(&quot;%d\n&quot;, 4*hanshu(2, 3));     //运算结果是 4*2+3=11  </span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//#define hanshu(x,y) ((x)+(y))</span></span><br><span class="line"><span class="comment">//int main()                                 //加上括号后才算的是整体</span></span><br><span class="line"><span class="comment">//&#123;                                          //4*（2+3）</span></span><br><span class="line"><span class="comment">//printf(&quot;%d\n&quot;, 4 * hanshu(2, 3));</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="———————————————–初识指针—————————————————————"><a href="#———————————————–初识指针—————————————————————" class="headerlink" title="———————————————–初识指针—————————————————————"></a>———————————————–初识指针—————————————————————</h1><p>&#x2F;&#x2F; &amp;–取地址<br>&#x2F;&#x2F; <em>–解引用操作符<br>&#x2F;&#x2F;内存中地址是16进制，16进制1-9是数字表达，10，11,12是字母a，b ，c，<br>&#x2F;&#x2F;%p用来打印地址<br>&#x2F;&#x2F; 在新建一个变量的时候（int a &#x3D; 10 ）会在内存中分配一个4字节的空间，这个空间有自己的编号.（int</em> pa &#x3D;&amp;a；）就是把编号放到<br>&#x2F;&#x2F; 一个新的空间中（这个空间的大小等于变量的大小）.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 10;   //定义了一个a，a会在内存中被分配一个字节</span></span><br><span class="line"><span class="comment">//printf(&quot;%p\n&quot;, &amp;a);//%p打印地址  //&amp;是取地址的意思 //这里的地址每次都是随机的</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// int main()</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//   int a = 10；</span></span><br><span class="line"><span class="comment">//     int* pa = &amp;a   //pa是用来存放地址的，在c语言中pa叫指针变量  //在int 后面加上* ，就说明pa是指针变量</span></span><br><span class="line"><span class="comment">//     *pa = 20；    //*pa可以直接改变变量的值    //*--解引用操作符</span></span><br><span class="line"><span class="comment">//    通过pa中的地址，找到a的地址，改变a的值.</span></span><br><span class="line"><span class="comment">//     return 0；</span></span><br><span class="line"><span class="comment">//  &#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;指针变量的大小<br>&#x2F;&#x2F;指针需要多大的空间，取决地址的存储需要多大空间<br>&#x2F;&#x2F;32位系统是4字节，64位是8字节</p><h1 id="———————————————————结构体—————————————————–"><a href="#———————————————————结构体—————————————————–" class="headerlink" title="———————————————————结构体—————————————————–"></a>———————————————————结构体—————————————————–</h1><p>&#x2F;&#x2F;struct–结构体 </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//struct jiegouti            //创建一个结构体</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char mingzi[10];      //一一对应的类型和自定义名字</span></span><br><span class="line"><span class="comment">//int nianling;</span></span><br><span class="line"><span class="comment">//double tizhong;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;;</span></span><br><span class="line"><span class="comment">////.--点操作符</span></span><br><span class="line"><span class="comment">////-&gt;--箭头操作符</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//struct jiegouti a = &#123; &quot;张三&quot;, 20, 75.5&#125;;       //结构体的创建和初始化</span></span><br><span class="line"><span class="comment">//printf(&quot;%s %d %lf\n&quot;, a.mingzi, a.nianling, a.tizhong); //结构体变量，成员变量</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//struct jiegouti* pa = &amp;a;           //指针     //结构体也可以用指针</span></span><br><span class="line"><span class="comment">//printf(&quot;%s %d %lf\n&quot;, (*pa).mingzi,(*pa).nianling,(*pa).tizhong); //</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//printf(&quot;%s %d %lf\n&quot;, pa-&gt;mingzi, pa-&gt;nianling, pa-&gt;tizhong);    //-&gt;箭头操作符  //要先（struct jiegouti* pa = &amp;a;）才能用</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="————————————————分支语句if-else—————————————————"><a href="#————————————————分支语句if-else—————————————————" class="headerlink" title="————————————————分支语句if else—————————————————"></a>————————————————分支语句if else—————————————————</h1><p>&#x2F;&#x2F;c语言是结构化的程序语言：顺序结构，选择结构，循环结构.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 100;</span></span><br><span class="line"><span class="comment">//if (a &lt; 10)                  //如果写成else（20&lt;=a&gt;=10）;结果是不对的，要用&amp;&amp;或者||</span></span><br><span class="line"><span class="comment">//printf(&quot;1&quot;);</span></span><br><span class="line"><span class="comment">//else if (a &gt;= 10 &amp;&amp; a &lt;= 20)</span></span><br><span class="line"><span class="comment">//printf(&quot;2&quot;);</span></span><br><span class="line"><span class="comment">//else if (a &gt; 20 &amp;&amp; a &lt; 30)</span></span><br><span class="line"><span class="comment">//printf(&quot;3&quot;);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//int b = 2;</span></span><br><span class="line"><span class="comment">//if (a == 1)               //什么都不输出</span></span><br><span class="line"><span class="comment">//if (b == 2)</span></span><br><span class="line"><span class="comment">//printf(&quot;1&quot;);            //else会和最近的一个if匹配</span></span><br><span class="line"><span class="comment">//else                       //if里面的内容可以直接用&#123;&#125;包起来</span></span><br><span class="line"><span class="comment">//printf(&quot;2&quot;);            //想要和上一个if匹配就用&#123;&#125;把他们分开</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="—————————————————-代码风格————————————————–"><a href="#—————————————————-代码风格————————————————–" class="headerlink" title="—————————————————-代码风格————————————————–"></a>—————————————————-代码风格————————————————–</h1><p>&#x2F;&#x2F; 编程时要注意代码的分行，养成好的书写代码习惯.<br>&#x2F;&#x2F;《高质量c++编程》作者：林锐（博士） 完成日期：2001.7.24  没实体书.</p><h1 id="—————————————————–switch语句———————————————–"><a href="#—————————————————–switch语句———————————————–" class="headerlink" title="—————————————————–switch语句———————————————–"></a>—————————————————–switch语句———————————————–</h1><p>&#x2F;&#x2F; case语句<br>&#x2F;&#x2F; break–跳出 ，停止<br>&#x2F;&#x2F;switch（整形表达式）<br>&#x2F;&#x2F;{<br>&#x2F;&#x2F;语句项<br>&#x2F;&#x2F;}</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;, &amp;a);            //给一个可以输入的空间</span></span><br><span class="line"><span class="comment">//switch (a)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//case 1:</span></span><br><span class="line"><span class="comment">//printf(&quot;1&quot;);</span></span><br><span class="line"><span class="comment">//case 2:                       </span></span><br><span class="line"><span class="comment">//printf(&quot;2&quot;);         //case前面给一个值，你输入就输出对应的东西</span></span><br><span class="line"><span class="comment">//case 3:                   //这样写如果给1，会输出1 2 3 </span></span><br><span class="line"><span class="comment">//printf(&quot;3&quot;);          //给2会输出2 3 </span></span><br><span class="line"><span class="comment">//&#125;                        //他不会自己停下，会一直运行到结束</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;, &amp;a);                  //break 跳出停止的意思</span></span><br><span class="line"><span class="comment">//switch (a)                        //要想不发生上面的情况在结尾加上break</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//case 1:</span></span><br><span class="line"><span class="comment">//printf(&quot;1&quot;);                       //case后面必须是整形常量表达式</span></span><br><span class="line"><span class="comment">//break;                              //字符也可以在case后面</span></span><br><span class="line"><span class="comment">//case 2:                       </span></span><br><span class="line"><span class="comment">//printf(&quot;2&quot;);</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 3:                  </span></span><br><span class="line"><span class="comment">//printf(&quot;3&quot;);</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;                        </span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;                                   //输入1-3输出1</span></span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;, &amp;a);</span></span><br><span class="line"><span class="comment">//switch (a) </span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//case 1:</span></span><br><span class="line"><span class="comment">//case 2:</span></span><br><span class="line"><span class="comment">//case 3:</span></span><br><span class="line"><span class="comment">//printf(&quot;1&quot;);</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 5:                      //输入5-6输出2</span></span><br><span class="line"><span class="comment">//case 6:</span></span><br><span class="line"><span class="comment">//printf(&quot;2&quot;);</span></span><br><span class="line"><span class="comment">//break;                     //最后的break可加可不加，最好加上      </span></span><br><span class="line"><span class="comment">//default :                          //default语句，当输入的值没有出现在要求中，就可以使用default</span></span><br><span class="line"><span class="comment">//printf(&quot;输入错误&quot;);             //default和case的顺序无所谓，不过习惯放在最后</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="—————————————————-循环语句while-1—————————————————–"><a href="#—————————————————-循环语句while-1—————————————————–" class="headerlink" title="—————————————————-循环语句while 1—————————————————–"></a>—————————————————-循环语句while 1—————————————————–</h1><p>&#x2F;&#x2F;break–停止，跳出<br>&#x2F;&#x2F;continue–继续</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//while (a &lt; 10)                    //如果是break，则a走到5时程序结束</span></span><br><span class="line"><span class="comment">//&#123;                                 //如果是continue，则a走到5时程序会跳到while (a &lt; 10)这一行无限循环下去</span></span><br><span class="line"><span class="comment">//if (a == 5)</span></span><br><span class="line"><span class="comment">//break; / continue;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d\n&quot;, a);</span></span><br><span class="line"><span class="comment">//a++;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;EOF – end of file –文件结束标志<br>&#x2F;&#x2F;getchar（）–从键盘获得一个字符<br>&#x2F;&#x2F;putchar（）–输出获得的字符</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//while ((a = getchar()) != EOF)         //从键盘获得一个字符，获取错误就输出EOF</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//putchar(a);                </span></span><br><span class="line"><span class="comment">//&#125;                                      //想要结束就ctrl+z，就读取结束</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;写一个输入密码，并且确认密码代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a;               //用getchar（）记得要创建整形</span></span><br><span class="line"><span class="comment">//char mima[20] = &#123;0&#125;;       //记得要创建字符串  </span></span><br><span class="line"><span class="comment">//printf(&quot;请输入密码：&quot;);</span></span><br><span class="line"><span class="comment">//scanf(&quot;%s&quot;, mima);             //输入密码比如123，在缓冲区中其实有123\n,而scanf只会拿走123不会拿走\n.</span></span><br><span class="line"><span class="comment">//printf(&quot;请确认密码(Y/N)&quot;);         //scanf也不会拿走空格后面的东西，比如123 456\n,scanf只会拿走123</span></span><br><span class="line"><span class="comment">//int b = 0;                         //不拿光缓冲区里的东西会影响接下来的操作</span></span><br><span class="line"><span class="comment">//while ((b = getchar()) != &#x27;\n&#x27;)       //\n需要用&#x27;&#x27;包起来      //综上所述，要创建一个东西把他拿光.</span></span><br><span class="line"><span class="comment">//&#123;                                      //while ((b = getchar()) != &#x27;\n&#x27;)，不断循环拿走缓冲区里的东西，不打印</span></span><br><span class="line"><span class="comment">//;                               //直到拿到\n，循环停下来.</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//a = getchar();                      //获取“请确认密码”后的内容.</span></span><br><span class="line"><span class="comment">//if (a == &#x27;Y&#x27;)            //记得要用 “==” </span></span><br><span class="line"><span class="comment">//printf(&quot;成功&quot;);</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//printf(&quot;失败&quot;);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;小练习</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//while ((a=getchar()) != EOF)            //输入的是0-9就不显示继续循环，输入非0-9就打印</span></span><br><span class="line"><span class="comment">//&#123;                                  //ctrl+z结束</span></span><br><span class="line"><span class="comment">//if (a &lt; &#x27;0&#x27; || a&gt;&#x27;9&#x27;)</span></span><br><span class="line"><span class="comment">//continue;</span></span><br><span class="line"><span class="comment">//putchar(a);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="—————————————————–for循环————————————————————"><a href="#—————————————————–for循环————————————————————" class="headerlink" title="—————————————————–for循环————————————————————"></a>—————————————————–for循环————————————————————</h1><p>&#x2F;&#x2F;一个基本的while循环有三个部分</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// int main（）</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//int a = 1；               初始化</span></span><br><span class="line"><span class="comment">//while（a&lt;10）             判断部分</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf（&quot;***&quot;）</span></span><br><span class="line"><span class="comment">//a++；                 调整部分 </span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//return 0；</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;<br>&#x2F;&#x2F;for循环的基本结构：for (初始化; 判断部分; 调整部分)<br>&#x2F;&#x2F;for循环的特点，初始化部分只被循环一次<br>&#x2F;&#x2F;break–跳出，停止<br>&#x2F;&#x2F;continue–继续</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//for (a=1; a&lt;10; a++)      //a=1只被循环一次</span></span><br><span class="line"><span class="comment">//&#123;   </span></span><br><span class="line"><span class="comment">//if (a == 5)                   //加了continue之后，当a=5时会回到for (a=1; a&lt;10; a++)这一行，不执行printf(&quot;%d\n&quot;, a);</span></span><br><span class="line"><span class="comment">//continue;                  //break和while循环一样，满足要求后结束循环</span></span><br><span class="line"><span class="comment">//printf(&quot;%d\n&quot;, a);           //for循环的循环体中就打印</span></span><br><span class="line"><span class="comment">//                               //break和continue和while循环差不多，但是有差异</span></span><br><span class="line"><span class="comment">//                             //输出1234 6789</span></span><br><span class="line"><span class="comment">//&#125;                                   //continue上去后会继续执行a&lt;10;a++;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;循环体内不建议在加循环（可以加但是不建议）</p><p>&#x2F;&#x2F;for循环的变种<br>&#x2F;&#x2F;变种1</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//for (;;)    //for循环的三个部分从语法上都可以省略.但是判断部分的省略就会使得代码死循环</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;hh\n&quot;); //输出无限个hh</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="————————————————-do…while循环—————————————————–"><a href="#————————————————-do…while循环—————————————————–" class="headerlink" title="————————————————-do…while循环—————————————————–"></a>————————————————-do…while循环—————————————————–</h1><p>&#x2F;&#x2F;for和while都是先判断在循环，do..while是先循环在判断<br>&#x2F;&#x2F;因为循环体至少要执行一次，所以应用场合不多</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a = 0;</span></span><br><span class="line"><span class="comment">//do</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (a == 5)                 //brake和另外两个循环一样，结束循环</span></span><br><span class="line"><span class="comment">//continue;               </span></span><br><span class="line"><span class="comment">//            </span></span><br><span class="line"><span class="comment">//printf(&quot;%d\n&quot;, a);         //输出01234无限循环</span></span><br><span class="line"><span class="comment">//a++;</span></span><br><span class="line"><span class="comment">//&#125; while (a &lt; 10);       //最后的分号不能省略 </span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h1 id="——————————————————初识完—————————————————–"><a href="#——————————————————初识完—————————————————–" class="headerlink" title="——————————————————初识完—————————————————–"></a>——————————————————初识完—————————————————–</h1><p>&#x2F;&#x2F;作业：计算n的阶乘</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int n = 0;</span></span><br><span class="line"><span class="comment">//int i = 0;</span></span><br><span class="line"><span class="comment">//int b = 1;</span></span><br><span class="line"><span class="comment">//printf(&quot;请输入n的值:&quot;);</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;, &amp;n);</span></span><br><span class="line"><span class="comment">//for (i = 1; i &lt;= n; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//b *= i;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d\n&quot;, b);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业2：计算1-10的阶乘相加</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int n = 0;</span></span><br><span class="line"><span class="comment">//int i = 0;</span></span><br><span class="line"><span class="comment">//int jiecheng = 1;</span></span><br><span class="line"><span class="comment">//int shuchu = 0;                     //不理解就F10，然后跟着老师的视频在理解一遍.</span></span><br><span class="line"><span class="comment">//for (n = 1; n &lt;=5; n++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int jiecheng = 1;</span></span><br><span class="line"><span class="comment">//for (i = 1; i &lt;= n; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//jiecheng *= i;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//shuchu += jiecheng;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d\n&quot;, shuchu);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业:在一个有序数组中找到一个数(k).<br>&#x2F;&#x2F;提示；二分查找（拆分查找）<br>&#x2F;&#x2F;原理：每次查找一半，无限循环直到查到.<br>&#x2F;&#x2F;先创建一个有序数组<br>&#x2F;&#x2F;在创建一个左边下标和一个右边下标<br>&#x2F;&#x2F;在创建一个被查找到的值<br>&#x2F;&#x2F;查找用到数组的下标数<br>&#x2F;&#x2F;用sizeof计算数组的个数<br>&#x2F;&#x2F;用到if、elseif、while、<br>&#x2F;&#x2F;找到了打印找到了并输出值<br>&#x2F;&#x2F;最后找不到，跳出循环打印找不到</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int arr[] = &#123; 1,2,3,4,5,6,7,8,9,10 &#125;;</span></span><br><span class="line"><span class="comment">//int sz = sizeof(arr) / sizeof(arr[0]);//计算数组中元素个数</span></span><br><span class="line"><span class="comment">//int k = 0;</span></span><br><span class="line"><span class="comment">//int zuo = 0;</span></span><br><span class="line"><span class="comment">//int you = sz - 1;          //因为第一位是从0开始，所以最右边数对应的下标数要减1</span></span><br><span class="line"><span class="comment">//while (zuo &lt;= you)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int zhong = (zuo + you) / 2;       //求出中间的数</span></span><br><span class="line"><span class="comment">//if (arr[zhong] &lt; k)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//zuo = zhong + 1;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else if (arr[zhong] &gt; k)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//you = zhong - 1;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;找到了;%d\n&quot;, zhong);    //这里打印的是数组中元素对应的下标数，</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//if (zuo &gt; you)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;找不到&quot;);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：动态组名<br>&#x2F;&#x2F;提示<br>&#x2F;&#x2F;创建组名<br>&#x2F;&#x2F;创建格式<br>&#x2F;&#x2F;计算字符串长度（strlen）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//char arr1[] =  &quot;AIMWARE.net&quot; ;</span></span><br><span class="line"><span class="comment">//char arr2[] =  &quot;           &quot; ;</span></span><br><span class="line"><span class="comment">//int zuo = 0;</span></span><br><span class="line"><span class="comment">//int you = strlen(arr1) - 1;</span></span><br><span class="line"><span class="comment">//while (zuo&lt;=you)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//arr2[zuo] = arr1[zuo];</span></span><br><span class="line"><span class="comment">//arr2[you] = arr1[you];</span></span><br><span class="line"><span class="comment">//printf(&quot;%s\n&quot;, arr2);</span></span><br><span class="line"><span class="comment">//Sleep(1000);  //延迟（需引用头文件#include&lt;windows.h&gt;）</span></span><br><span class="line"><span class="comment">//system(&quot;cls&quot;);  //清空屏幕</span></span><br><span class="line"><span class="comment">//zuo++;</span></span><br><span class="line"><span class="comment">//you--;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;%s\n&quot;, arr2);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业:模拟用户情景，用户输入密码，错误三次即退出程序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int i;</span></span><br><span class="line"><span class="comment">//char password[20] = &#123; 0 &#125;;</span></span><br><span class="line"><span class="comment">//printf(&quot;请输入密码:&quot;);</span></span><br><span class="line"><span class="comment">//for (i = 0; i &lt; 3; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%s&quot;, password);                       //以为password是字符串类型，所以不用输入&amp;</span></span><br><span class="line"><span class="comment">//if(strcmp(password,&quot;aimware&quot;) == 0)          //比较两个字符串用strcmp. 如果相同，strcmp会返回0</span></span><br><span class="line"><span class="comment">//&#123;                                            //两个字符串比较不能用if（password==&quot;********&quot;）;</span></span><br><span class="line"><span class="comment">//printf(&quot;登录成功&quot;);</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;密码错误，请重新输入：\n&quot;);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//if (i == 3)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;超过三次，退出程序&quot;);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：简单的猜数字游戏<br>&#x2F;&#x2F; srand–设置一个随机的起点（配合rand用）引用头文件&lt;stdlib.h&gt;<br>&#x2F;&#x2F; rand–生成随机数，最大为32767.<br>&#x2F;&#x2F; time()–生成时间戳<br>&#x2F;&#x2F; 模是什么？什么是模？打个比方，32767%100；的意思是32767&#x3D;100*327余下67，这个67就是模<br>&#x2F;&#x2F;要求：会自动产生一个1~100的随机数，然后你去猜，如果猜对了就恭喜，如果猜错了会告诉你猜大了还是猜小了继续猜，直到猜对.<br>&#x2F;&#x2F;游戏可以一直玩，除非退出游戏.<br>&#x2F;&#x2F;代码思路：因为游戏一开始就要玩，所以用do..while开头<br>&#x2F;&#x2F;上来先打印一个菜单<br>&#x2F;&#x2F; 输出1&#x2F;0开始或结束游戏，输入其他则提示错误<br>&#x2F;&#x2F; 输入1开始游戏后跳到游戏运行函数<br>&#x2F;&#x2F; 用rand和srand配合生成随机数，并用模把范围限制到1-100里<br>&#x2F;&#x2F; 猜大了就提示猜大了，猜小了就提示猜小了.<br>&#x2F;&#x2F; 猜对了之后输出猜对了并结束循环<br>&#x2F;&#x2F; 回到游戏开始选择界面</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//void menu()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;***************************\n&quot;);</span></span><br><span class="line"><span class="comment">//printf(&quot;********* 1.开始 **********\n&quot;);</span></span><br><span class="line"><span class="comment">//printf(&quot;********* 0.退出 **********\n&quot;);</span></span><br><span class="line"><span class="comment">//printf(&quot;***************************\n&quot;);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//void game()</span></span><br><span class="line"><span class="comment">//&#123;//unsigned int是一个类型，srand要用这个类型，这里是直接改变time的类型为（unsigned int）</span></span><br><span class="line"><span class="comment">////srand((unsigned int)time(NULL));//NULL是，time自己有个初始值，用NULL就没有初始值了</span></span><br><span class="line"><span class="comment">////设置一个随机的起点   //在srand中输入一个随机值，才能让rand产生的是随机值</span></span><br><span class="line"><span class="comment">//int a; //这里用到时间戳（详情百度）</span></span><br><span class="line"><span class="comment">////因为这个代码只用一次就好了所以放到了主函数里去   </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//                                       //这里模的范围是0-99，那么加1就是0-100了</span></span><br><span class="line"><span class="comment">//int ret = rand()%100+1;               //rand生成一个随机数，最大为32767，类型为int，要引用头文件#include&lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">// //说是随机其实不随机，重新启动程序生成的都是一样的</span></span><br><span class="line"><span class="comment">//                                    //怎么办呢？用sranf（）</span></span><br><span class="line"><span class="comment">//while (1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;请猜数字：&quot;);</span></span><br><span class="line"><span class="comment">//scanf(&quot; %d&quot;, &amp;a);</span></span><br><span class="line"><span class="comment">//if (a &lt; ret)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;猜小了\n&quot;);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else if (a &gt; ret)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;猜大了\n&quot;);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;猜对了\n&quot;);</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;                                 </span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int input;</span></span><br><span class="line"><span class="comment">//srand((unsigned int)time(NULL)); //详情见上面</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//do</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//menu();  //打印菜单</span></span><br><span class="line"><span class="comment">//printf(&quot;请选择&quot;);                 //这一步选择是否开始游戏</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;, &amp;input);</span></span><br><span class="line"><span class="comment">//switch (input)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//case 1:</span></span><br><span class="line"><span class="comment">//game();                                           //printf(&quot;游戏开始\n&quot;);</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 0:</span></span><br><span class="line"><span class="comment">//printf(&quot;游戏结束\n&quot;);</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//default:</span></span><br><span class="line"><span class="comment">//printf(&quot;选择错误，重新选择\n&quot;);</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125; while (input);                        //把输入值代进去看看，逻辑不能错</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：输入三个数（a，b，c），让三个数从大到小排列.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a, b, c;</span></span><br><span class="line"><span class="comment">//printf(&quot;请输入三个数：&quot;);</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d%d%d&quot;, &amp;a, &amp;b, &amp;c);</span></span><br><span class="line"><span class="comment">//while (1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (a &lt; b)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int imp;</span></span><br><span class="line"><span class="comment">//imp = a;</span></span><br><span class="line"><span class="comment">//a = b;</span></span><br><span class="line"><span class="comment">//b = imp;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//if (a &lt; c)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int imp;</span></span><br><span class="line"><span class="comment">//imp = a;</span></span><br><span class="line"><span class="comment">//a = c;</span></span><br><span class="line"><span class="comment">//c = imp;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//if (b &lt; c)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int imp;</span></span><br><span class="line"><span class="comment">//imp = b;</span></span><br><span class="line"><span class="comment">//b = c;</span></span><br><span class="line"><span class="comment">//c = imp;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d%d%d&quot;, a, b, c);</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：写一个代码，打印1-100里3的倍数.<br>&#x2F;&#x2F;思路：首先要产生1-100的数<br>&#x2F;&#x2F;      3的倍数肯定能被3整除<br>&#x2F;&#x2F;2种方法：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int i;</span></span><br><span class="line"><span class="comment">//for (i = 3; i &lt;= 100; i += 3)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d &quot;, i);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int i;</span></span><br><span class="line"><span class="comment">//for (i = 1; i &lt;= 100; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (i % 3 == 0)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d &quot;, i);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：给定2个数，求这两个数的最大公约数.<br>&#x2F;&#x2F;提示，先找出2个数中小的那个（因为公约数不会比最小的那个数还小）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int m, n;</span></span><br><span class="line"><span class="comment">//printf(&quot;请输入2个数：&quot;);</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d%d&quot;, &amp;m, &amp;n);</span></span><br><span class="line"><span class="comment">//int min;</span></span><br><span class="line"><span class="comment">//if (m &gt; n)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//min = n;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//min = m;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//while (1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (m % min == 0 &amp;&amp; n % min == 0)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;最大公约数为：%d&quot;, min);</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//min--;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;第二种方法：辗转相除法<br>&#x2F;&#x2F;辗转相除法：24 % 18 &#x3D; 6          48 % 18 &#x3D; 12             18 % 24 &#x3D;18<br>&#x2F;&#x2F;            这里是24-18&#x3D;6        这里是48-18*2&#x3D;12<br>&#x2F;&#x2F;辗转相除法：18 % 6 &#x3D; 0           18 % 12 &#x3D; 6              24 % 18 &#x3D; 6 </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int m, n, t;</span></span><br><span class="line"><span class="comment">//printf(&quot;请输入2个数：&quot;);</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d%d&quot;, &amp;m, &amp;n);</span></span><br><span class="line"><span class="comment">//while (t=m%n)                    //不断循环直到m%n=0,因为0为假所以跳出循环，打印</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//m = n;</span></span><br><span class="line"><span class="comment">//n = t;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;最大公约数为：%d&quot;, n);    //最小公倍数 == m*n/最小公约数</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业；打印闰年.打印1000-2000之间的闰年<br>&#x2F;&#x2F;什么是润年？<br>&#x2F;&#x2F;润年是，能被4整除，不能被100整除的，能被400整除的年份.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;1000-2000之间的闰年为:&quot;);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//int i;</span></span><br><span class="line"><span class="comment">//for (i = 1000; i &lt;= 2000; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (i % 4 == 0)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (i % 100 != 0)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d &quot;, i);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：打印100-200的素数<br>&#x2F;&#x2F;素数&#x3D;质数<br>&#x2F;&#x2F;只能被1和他本身整除<br>&#x2F;&#x2F;判断i是不是素数，用2到i的数去除他，除不尽就是素数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int i ;</span></span><br><span class="line"><span class="comment">//int c = 0;</span></span><br><span class="line"><span class="comment">//for (i = 100; i &lt;= 200; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int j;</span></span><br><span class="line"><span class="comment">//for (j = 2; j &lt; i; j++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (i % j == 0)</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//if (j == i)</span></span><br><span class="line"><span class="comment">//c++;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d &quot;, i);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;c=%d&quot;, c);</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：打印100-200之间的素数，第二种方法</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a, b;</span></span><br><span class="line"><span class="comment">//int d = 0;</span></span><br><span class="line"><span class="comment">//for (a = 100; a &lt;= 200; a++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int c = 1;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//for (b = 2; b&lt;a; b++)                  </span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//if (a % b == 0)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//c = 0;                </span></span><br><span class="line"><span class="comment">//break;                  </span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;                                 </span></span><br><span class="line"><span class="comment">//if (c==1)                        </span></span><br><span class="line"><span class="comment">//&#123; </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//d++;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d &quot;, a);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;一共有%d个素数&quot;, d);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：打印100-200之间的素数.第三种方法<br>&#x2F;&#x2F;sqrt–是开平方函数  需要引用头文件#include&lt;mth.h&gt;<br>&#x2F;&#x2F;如果有一个数m，  m &#x3D; a * b<br>&#x2F;&#x2F;那么a和b中至少有一个是小于等于m开平方的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a, b;</span></span><br><span class="line"><span class="comment">//int d = 0;</span></span><br><span class="line"><span class="comment">//for (a = 100; a &lt;= 200; a++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int c = 1;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//for (b = 2; b &lt;=sqrt(a); b++)     //开平方数比上面把所有的数一个一个试效率更高</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//if (a % b == 0)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//c = 0;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//if (c == 1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//d++;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d &quot;, a);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;一共有%d个素数&quot;, d);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;作业：打印100-200之间的素数  对以上在进行优化<br>&#x2F;&#x2F;因为偶数都可以除以2所以偶数不可能是素数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int a, b;</span></span><br><span class="line"><span class="comment">//int d = 0;</span></span><br><span class="line"><span class="comment">//for (a = 101; a &lt;= 200; a+=2)            //排除所有的偶数，产生的是100-200中的奇数.</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int c = 1;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//for (b = 2; b &lt;= sqrt(a); b++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//if (a % b == 0)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//c = 0;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//if (c == 1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//d++;</span></span><br><span class="line"><span class="comment">//printf(&quot;%d &quot;, a);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf(&quot;一共有%d个素数&quot;, d);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo插入图片问题解决方法（不是最优解）</title>
      <link href="/2022/04/27/hexo%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%EF%BC%88%E4%B8%8D%E6%98%AF%E6%9C%80%E4%BC%98%E8%A7%A3%EF%BC%89/"/>
      <url>/2022/04/27/hexo%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%EF%BC%88%E4%B8%8D%E6%98%AF%E6%9C%80%E4%BC%98%E8%A7%A3%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="解决插入本地图片的问题（）"><a href="#解决插入本地图片的问题（）" class="headerlink" title="解决插入本地图片的问题（）"></a>解决插入本地图片的问题（）</h1><h2 id="其实并没有完全解决，因为我的实力不允许所以我使用了偏方"><a href="#其实并没有完全解决，因为我的实力不允许所以我使用了偏方" class="headerlink" title="其实并没有完全解决，因为我的实力不允许所以我使用了偏方"></a>其实并没有完全解决，因为我的实力不允许所以我使用了偏方</h2><p>下面讲的是我的偏方，并不能从根本上解决问题，最好还是自己去看别人的博客.有好多种不同的问题，解决的方法也不相同。</p><p>第一步，我这里用的是插件，只要去别的地方复制图片，在回到code ctrl+alt+v就自动打出来.</p><p><img src="/2022/04/27/hexo%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%EF%BC%88%E4%B8%8D%E6%98%AF%E6%9C%80%E4%BC%98%E8%A7%A3%EF%BC%89/2022-04-27-10-32-52.png"></p><p>打出来的图片会自动生成本地的，并保存在下面图片的文件夹里</p><p><img src="/2022/04/27/hexo%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%EF%BC%88%E4%B8%8D%E6%98%AF%E6%9C%80%E4%BC%98%E8%A7%A3%EF%BC%89/2022-04-27-10-34-00.png"></p><p>这个时候，在vscode本地预览里是能看到图片的，但是hexo g然后hexo s之后在本例hexo里看不到图片.<br>怎么办呢？<br>找到blog（博客文件夹）文件下（一般新手建博客，博客的文件夹都是叫blog的吧，不会有人起个奇怪的名字吧）<br>找到blog下_config.yml文件，打开.找到post_asset_folder 第一次打开后面是false，吧false改成true<br><img src="/2022/04/27/hexo%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%EF%BC%88%E4%B8%8D%E6%98%AF%E6%9C%80%E4%BC%98%E8%A7%A3%EF%BC%89/2022-04-27-10-40-17.png"><br>这个改完之后保存一下.<br>改完后的效果应该是，每次在 Git bash here中运行hexo new “你自己起名字”<br>在生成一个.md文件的时候还会生成一个相同名字的文件夹<br>之前建的.md文件不会生成文件夹.<br>把在_posts下的图片&#x3D;&#x3D;复制&#x3D;&#x3D;到对应名字的文件下<br>复制粘贴到vscode的图片只会放在_posts下.<br>要自己挪到对应的文件里<br>为什么要跑这么操作？<br>1.放到对应的文件夹下才能在网页的hexo里显示<br>2._posts里有图片才能在VScode里预览效果.</p><p><img src="/2022/04/27/hexo%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%EF%BC%88%E4%B8%8D%E6%98%AF%E6%9C%80%E4%BC%98%E8%A7%A3%EF%BC%89/2022-04-27-10-45-56.png"></p><h4 id="因为是偏方，所以很拉胯，以后继续学习后肯定会改变这个方法-主要是目前的水平看不到别人的"><a href="#因为是偏方，所以很拉胯，以后继续学习后肯定会改变这个方法-主要是目前的水平看不到别人的" class="headerlink" title="因为是偏方，所以很拉胯，以后继续学习后肯定会改变这个方法.主要是目前的水平看不到别人的."></a>因为是偏方，所以很拉胯，以后继续学习后肯定会改变这个方法.主要是目前的水平看不到别人的.</h4>]]></content>
      
      
      <categories>
          
          <category> 疑难解答 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>你好</title>
      <link href="/2022/04/26/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/04/26/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<p>你好,Markdown<br>初识Markdown<br>Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。 它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。<br>由于Markdown的轻量化、易读易写特性，并且对于图片，图表、数学式都有支持，许多网站都广泛使用Markdown来撰写帮助文档或是用于论坛上发表消息。 如GitHub、Reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge、简书等，甚至还能被使用来撰写电子书。 </p><h1 id="在VScode中配置和优化方便写Markdown"><a href="#在VScode中配置和优化方便写Markdown" class="headerlink" title="在VScode中配置和优化方便写Markdown"></a>在VScode中配置和优化方便写Markdown</h1><p>教程1：<br><a href="https://www.bilibili.com/video/BV1si4y1472o?from=search&amp;seid=9319540044298785757&amp;spm_id_from=333.337.0.0">https://www.bilibili.com/video/BV1si4y1472o?from=search&amp;seid=9319540044298785757&amp;spm_id_from=333.337.0.0</a></p><p>首先在拓展中下载安装工具<br>1.Markdown All in one  —- 他有很多快捷键和自动补全的操作，能让我们打markdown的时候更加方便<br>2.Markdown Preview Enhanced — 能让你在编写markdown的时候，能看到编写出来后的样子<br>3.Paste Image —  可以方便的把图片插入到markdown中<br>4.LimfxCodeEx —  可以把文章发表到Limfx上（因为我是用hexo+github搭建的博客，不需要什么limfx，所以没装）<br>4.Code Spell Checker — 可以检查出错别字（仅支持英文）  </p><p>首先，在右上角找到预览，看看自己写出来的效果是怎么样的</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p>总的来说几级标题就是字体越来越小</p><p>想要换行就在最后打两个空格</p><p>空一行就是新起一段</p><h1 id="强调！"><a href="#强调！" class="headerlink" title="强调！"></a>强调！</h1><p>强调有2种.<br>1.加粗  — 在要加粗的内容两边加上” ** “  ，           <strong>加粗</strong>               快捷键ctrl+b<br>2.斜体  — 在要斜体的内容两边加上” * “   ，             <em>斜体</em>               快捷键ctrl+i</p><p>关于编号，Markdown会自动帮你编号</p><h1 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h1><h3 id="Markdown自己插入图片的办法"><a href="#Markdown自己插入图片的办法" class="headerlink" title="Markdown自己插入图片的办法"></a>Markdown自己插入图片的办法</h3><p>有插件了，这边就先放放吧。以后再说.</p><h3 id="插件插入图片的办法"><a href="#插件插入图片的办法" class="headerlink" title="插件插入图片的办法"></a>插件插入图片的办法</h3><p>因为之前有安装插入图片的插件所以这里很方便</p><p>第一步：先去找到想要的图片复制一下<br>第二部：回到这里ctrl+Ait+v<br>或者手动输入 ‘ ![ ] ()’ ,添加自己本地保存的图片，本地的图片要和你编辑的这个文件在同一个文件夹里（这好像是markdown自己的方法？我不清楚.）</p><p><img src="/2022/04/26/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/2022-04-26-17-31-48.png"></p><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><p>用ESC下面那个</p><p><img src="/2022/04/26/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/2022-04-26-17-47-54.png"></p><p><img src="/2022/04/26/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/2022-04-26-17-48-15.png"></p><p><img src="/2022/04/26/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/2022-04-26-17-48-33.png"></p><h1 id="未完待续……"><a href="#未完待续……" class="headerlink" title="未完待续……"></a>未完待续……</h1><h1 id="第一次使用VScode"><a href="#第一次使用VScode" class="headerlink" title="第一次使用VScode"></a>第一次使用VScode</h1><h1 id="遇到了很多问题"><a href="#遇到了很多问题" class="headerlink" title="遇到了很多问题"></a>遇到了很多问题</h1><h1 id="比如，在vscode本地预览的时候图片能看到，但是在本地的hexo网页里是图片加载不出来"><a href="#比如，在vscode本地预览的时候图片能看到，但是在本地的hexo网页里是图片加载不出来" class="headerlink" title="比如，在vscode本地预览的时候图片能看到，但是在本地的hexo网页里是图片加载不出来"></a>比如，在vscode本地预览的时候图片能看到，但是在本地的hexo网页里是图片加载不出来</h1><h1 id="还有markdown部分其他功能的补充"><a href="#还有markdown部分其他功能的补充" class="headerlink" title="还有markdown部分其他功能的补充"></a>还有markdown部分其他功能的补充</h1><h1 id="用vscode打开Blog的-md文件中文为什么是乱码，为什么第一次下载完插件弄好vscode的时候是没问题的，下次在打开vscode的时候中文会被框框，框起来"><a href="#用vscode打开Blog的-md文件中文为什么是乱码，为什么第一次下载完插件弄好vscode的时候是没问题的，下次在打开vscode的时候中文会被框框，框起来" class="headerlink" title="用vscode打开Blog的.md文件中文为什么是乱码，为什么第一次下载完插件弄好vscode的时候是没问题的，下次在打开vscode的时候中文会被框框，框起来"></a>用vscode打开Blog的.md文件中文为什么是乱码，为什么第一次下载完插件弄好vscode的时候是没问题的，下次在打开vscode的时候中文会被框框，框起来</h1><h1 id="关于图片的插入，网上各种不同的办法，我是怎么解决的，"><a href="#关于图片的插入，网上各种不同的办法，我是怎么解决的，" class="headerlink" title="关于图片的插入，网上各种不同的办法，我是怎么解决的，"></a>关于图片的插入，网上各种不同的办法，我是怎么解决的，</h1><h1 id="都在第二篇文章里"><a href="#都在第二篇文章里" class="headerlink" title="都在第二篇文章里"></a>都在第二篇文章里</h1><p>教程2：<br><a href="https://www.bilibili.com/video/BV1hJ411X75X?from=search&amp;seid=2912445405318996653&amp;spm_id_from=333.337.0.0">https://www.bilibili.com/video/BV1hJ411X75X?from=search&amp;seid=2912445405318996653&amp;spm_id_from=333.337.0.0</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
